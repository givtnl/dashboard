{"version":3,"sources":["app.js","dashboard.js","environment.js","login.js","main.js","helpers/cookiemonster.js","helpers/messages.js","helpers/webapi.js","resources/index.js","/Users/lenniestockman/givtplatform/GivtPlatform/src/app.html","/Users/lenniestockman/givtplatform/GivtPlatform/src/css/login.css","/Users/lenniestockman/givtplatform/GivtPlatform/src/dashboard.html","/Users/lenniestockman/givtplatform/GivtPlatform/src/css/style.css","/Users/lenniestockman/givtplatform/GivtPlatform/src/login.html","/Users/lenniestockman/givtplatform/GivtPlatform/src/css/dashboard.css"],"names":["App","inject","cookieMonster","configureRouter","config","router","title","getCookie","map","route","moduleId","DashBoard","message","debug","testing","Login","api","ea","stayLoggedIn","email","password","staylogged","legit","subscribe","loggedIn","msg","createCookie","access_token","expires_in","console","log","location","reload","login","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","CookieMonster","name","value","days","expires","date","Date","setTime","getTime","toGMTString","document","cookie","c_name","length","c_start","indexOf","c_end","substring","unescape","LoginEvent","WebApi","get","url","params","oReq","XMLHttpRequest","open","setRequestHeader","JSON","parse","onreadystatechange","readyState","status","responseText","send","eventAggr","onload","json","publish","statusText"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {CookieMonster} from './helpers/cookiemonster';\n\nexport class App {\n    static inject () {return [CookieMonster]}\n\n    constructor(cookieMonster){\n        this.cookieMonster = cookieMonster;\n    }\n\n    configureRouter(config, router){\n        config.title = 'Givt Platform';\n\n        if(!this.cookieMonster.getCookie(\"access_token\")){\n            config.map([\n                {route : '', moduleId: 'login', title: 'Login'}\n            ])\n        }else{\n            config.map([\n                {route : '', moduleId: 'dashboard', title: 'Dashboard'}\n            ])\n        }\n    }\n}\n","export class DashBoard{\n    constructor(){\n        this.message = \"Hello World\";\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {WebApi} from './helpers/webapi';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginEvent} from './helpers/messages';\nimport {CookieMonster} from './helpers/cookiemonster';\n\nexport class Login{\n    static  inject(){ return [WebApi, EventAggregator, CookieMonster]};\n    constructor(api, ea, cookieMonster){\n        this.stayLoggedIn = \"Blijf ingelogd\";\n        this.api = api;\n        this.email = \"debug@nfcollect.com\";\n        this.password = \"Test123\";\n        this.staylogged = false;\n        this.legit = false;\n        this.ea = ea;\n        this.cookieMonster = cookieMonster;\n\n        ea.subscribe(LoginEvent, msg =>\n        {\n            this.loggedIn(msg.msg)\n        });\n    }\n\n    loggedIn(msg){\n        this.cookieMonster.createCookie(\"access_token\", msg.access_token, msg.expires_in / 60 / 60 / 24);\n        console.log(msg);\n        location.reload();\n    }\n\n\n    login(){\n        this.api.login(this.email, this.password);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class CookieMonster\n{\n    constructor(){\n\n    }\n\n    createCookie = function(name, value, days) {\n        var expires;\n        if (days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n            expires = \"; expires=\" + date.toGMTString();\n        }\n        else {\n            expires = \"\";\n        }\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n    }\n\n    getCookie(c_name) {\n        if (document.cookie.length > 0) {\n            var c_start = document.cookie.indexOf(c_name + \"=\");\n            if (c_start != -1) {\n                c_start = c_start + c_name.length + 1;\n                var c_end = document.cookie.indexOf(\";\", c_start);\n                if (c_end == -1) {\n                    c_end = document.cookie.length;\n                }\n                console.log(document.cookie.substring(c_start, c_end));\n                return unescape(document.cookie.substring(c_start, c_end));\n            }\n        }\n        return \"\";\n    }\n}","export class LoginEvent {\n    constructor(msg){\n        this.msg = msg;\n    }\n}","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginEvent} from './messages';\n\nexport class WebApi{\n    static inject() {return [EventAggregator]};\n\n    constructor(ea){\n        //this.url = url;\n        this.ea = ea;\n    };\n\n    get(url, params) {\n        var oReq = new XMLHttpRequest();\n        oReq.open(\"POST\", \"https://givtapidebug.azurewebsites.net/api/\" + url);\n        oReq.setRequestHeader(\"Content-type\",\"application/json\");\n        var params = JSON.parse(params);\n        oReq.onreadystatechange = function() {//Call a function when the state changes.\n            if(oReq.readyState == 4 && oReq.status == 200) {\n                return JSON.parse(oReq.responseText);\n            }\n        }\n        oReq.send(params);\n    }\n\n    login(email, password){\n        var oReq = new XMLHttpRequest();\n        var eventAggr = this.ea;\n        oReq.open(\"POST\", \"https://givtapidebug.azurewebsites.net/oauth2/token\");\n        oReq.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\n        var params = \"grant_type=password&userName=\"+email+\"&password=\"+password;\n        oReq.send(params);\n        oReq.onload = function() {\n            if(oReq.status >= 200 && oReq.status <300) {\n                var json = oReq.responseText;\n                if(json != \"\"){\n                    eventAggr.publish(new LoginEvent(JSON.parse(json)));\n                }\n            } else{\n                return this.statusText;\n            }\n        }\n    }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null],"sourceRoot":"../src"}