{"version":3,"sources":["app.js","environment.js","login.js","main.js","resources/index.js","/Users/bjornderudder/givtplatform/GivtPlatform/src/app.html","/Users/bjornderudder/givtplatform/GivtPlatform/src/css/login.css","/Users/bjornderudder/givtplatform/GivtPlatform/src/login.html","/Users/bjornderudder/givtplatform/GivtPlatform/src/css/style.css"],"names":["App","configureRouter","config","router","title","map","route","moduleId","debug","testing","Login","stayLoggedIn","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA;;;;;sBACTC,2CAAgBC,QAAQC,QAAO;AAC3BD,mBAAOE,KAAP,GAAe,eAAf;AACIF,mBAAOG,GAAP,CAAW,CACT,EAACC,OAAQ,EAAT,EAAaC,UAAU,OAAvB,EAAgCH,OAAO,OAAvC,EADS,CAAX;AAGP;;;;;;;;;;;oBCNU;AACbI,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;QCAFC,gBAAAA,QACT,iBAAa;AAAA;;AACT,aAAKC,YAAL,GAAoB,gBAApB;AACH;;;;;;;;UCOWC,YAAAA;;;;;;;;;;AANhBC,UAAQX,MAAR,CAAe;AACbY,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;ACFD;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router){\n        config.title = 'Givt Platform';\n            config.map([\n              {route : '', moduleId: 'login', title: 'Login'}\n        ])\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Login{\n    constructor(){\n        this.stayLoggedIn = \"Blijf ingelogd\";\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null],"sourceRoot":"../src"}