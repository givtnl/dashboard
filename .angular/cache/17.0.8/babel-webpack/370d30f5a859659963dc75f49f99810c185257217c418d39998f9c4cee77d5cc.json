{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.CHECKBOX_VALUE_ACCESSOR = {\n  provide: forms_1.NG_VALUE_ACCESSOR,\n  useExisting: core_1.forwardRef(function () {\n    return Checkbox;\n  }),\n  multi: true\n};\nvar Checkbox = function () {\n  function Checkbox(cd) {\n    this.cd = cd;\n    this.onChange = new core_1.EventEmitter();\n    this.onModelChange = function () {};\n    this.onModelTouched = function () {};\n    this.focused = false;\n    this.checked = false;\n  }\n  Checkbox.prototype.onClick = function (event, checkbox, focus) {\n    event.preventDefault();\n    if (this.disabled) {\n      return;\n    }\n    this.checked = !this.checked;\n    this.updateModel();\n    if (focus) {\n      checkbox.focus();\n    }\n  };\n  Checkbox.prototype.updateModel = function () {\n    if (!this.binary) {\n      if (this.checked) this.addValue();else this.removeValue();\n      this.onModelChange(this.model);\n      if (this.formControl) {\n        this.formControl.setValue(this.model);\n      }\n    } else {\n      this.onModelChange(this.checked);\n    }\n    this.onChange.emit(this.checked);\n  };\n  Checkbox.prototype.handleChange = function (event) {\n    this.checked = event.target.checked;\n    this.updateModel();\n  };\n  Checkbox.prototype.isChecked = function () {\n    if (this.binary) return this.model;else return this.model && this.model.indexOf(this.value) > -1;\n  };\n  Checkbox.prototype.removeValue = function () {\n    var _this = this;\n    this.model = this.model.filter(function (val) {\n      return val !== _this.value;\n    });\n  };\n  Checkbox.prototype.addValue = function () {\n    if (this.model) this.model = this.model.concat([this.value]);else this.model = [this.value];\n  };\n  Checkbox.prototype.onFocus = function (event) {\n    this.focused = true;\n  };\n  Checkbox.prototype.onBlur = function (event) {\n    this.focused = false;\n    this.onModelTouched();\n  };\n  Checkbox.prototype.writeValue = function (model) {\n    this.model = model;\n    this.checked = this.isChecked();\n    this.cd.markForCheck();\n  };\n  Checkbox.prototype.registerOnChange = function (fn) {\n    this.onModelChange = fn;\n  };\n  Checkbox.prototype.registerOnTouched = function (fn) {\n    this.onModelTouched = fn;\n  };\n  Checkbox.prototype.setDisabledState = function (val) {\n    this.disabled = val;\n  };\n  return Checkbox;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Checkbox.prototype, \"value\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Checkbox.prototype, \"name\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Checkbox.prototype, \"disabled\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Checkbox.prototype, \"binary\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Checkbox.prototype, \"label\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Checkbox.prototype, \"tabindex\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Checkbox.prototype, \"inputId\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Checkbox.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Checkbox.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", forms_1.FormControl)], Checkbox.prototype, \"formControl\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Checkbox.prototype, \"onChange\", void 0);\nCheckbox = __decorate([core_1.Component({\n  selector: 'p-checkbox',\n  template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-chkbox ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [name]=\\\"name\\\" [value]=\\\"value\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n                [ngClass]=\\\"{'ui-state-focus':focused}\\\" (change)=\\\"handleChange($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\">\\n            </div>\\n            <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" (click)=\\\"onClick($event,cb,true)\\\"\\n                        [ngClass]=\\\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'fa fa-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label class=\\\"ui-chkbox-label\\\" (click)=\\\"onClick($event,cb,true)\\\" \\n                [ngClass]=\\\"{'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n                *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n  providers: [exports.CHECKBOX_VALUE_ACCESSOR]\n}), __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])], Checkbox);\nexports.Checkbox = Checkbox;\nvar CheckboxModule = function () {\n  function CheckboxModule() {}\n  return CheckboxModule;\n}();\nCheckboxModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [Checkbox],\n  declarations: [Checkbox]\n})], CheckboxModule);\nexports.CheckboxModule = CheckboxModule;\n//# sourceMappingURL=checkbox.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}