{"ast":null,"code":"import _asyncToGenerator from \"/Users/maikel/Projects/givt/dashboard/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { QrCodeType } from \"../models/qr-code-type.enum\";\nimport { CollectionMediumType } from \"../models/collectionMediumType\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"../services/api-client.service\";\nimport * as i3 from \"../services/data.service\";\nimport * as i4 from \"../services/user.service\";\nimport * as i5 from \"../services/logging.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"./navigation.component\";\nimport * as i9 from \"./titlebar.component\";\nimport * as i10 from \"./footer.component\";\nfunction QRCodeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 13);\n    i0.ɵɵelement(3, \"circle\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction QRCodeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"div\", 17)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 18)(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 19)(11, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_8_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteQrcode());\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_8_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cancelDelete());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, \"QRCodeREQ_Disable_Title\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 6, \"QRCodeREQ_Disable_Info\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 8, \"QRCodeREQ_Disable_Confirm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 10, \"QRCodeREQ_Disable_Cancel\"));\n  }\n}\nfunction QRCodeComponent_div_9_tr_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const qrCode_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", qrCode_r11.Name, \"\");\n  }\n}\nfunction QRCodeComponent_div_9_tr_12_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"QRCodeREQ_2_button_generic\"), \" \");\n  }\n}\nfunction QRCodeComponent_div_9_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 30);\n    i0.ɵɵtemplate(2, QRCodeComponent_div_9_tr_12_span_2_Template, 2, 1, \"span\", 31)(3, QRCodeComponent_div_9_tr_12_span_3_Template, 3, 3, \"span\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"a\", 32);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_9_tr_12_Template_a_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const qrCode_r11 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.downloadQr(qrCode_r11.MediumId, qrCode_r11.Name));\n    });\n    i0.ɵɵelement(6, \"i\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 34);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_9_tr_12_Template_a_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const qrCode_r11 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.showModalForDelete(qrCode_r11));\n    });\n    i0.ɵɵelement(8, \"i\", 35);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const qrCode_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", qrCode_r11.Name && qrCode_r11.Name.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !qrCode_r11.Name || qrCode_r11.Name.length === 0);\n  }\n}\nfunction QRCodeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 16)(2, \"div\", 17)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 18)(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 23)(11, \"table\", 24);\n    i0.ɵɵtemplate(12, QRCodeComponent_div_9_tr_12_Template, 9, 2, \"tr\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 19)(14, \"p\", 26);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 27)(18, \"select\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function QRCodeComponent_div_9_Template_select_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.selectedLanguage = $event);\n    });\n    i0.ɵɵelementStart(19, \"option\", 29);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"option\", 29);\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"option\", 29);\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"translate\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(28, \"div\", 19)(29, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_9_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.saveLanguageAndContinue());\n    });\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 12, \"QRCodeREQ_List_Title\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 14, \"QRCodeREQ_List_Info\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.qrCodes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 16, \"QRCodeLanguagePreferenceTitle\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedLanguage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", \"NL\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 18, \"LanguageNL\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", \"EN\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 20, \"LanguageEN\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngValue\", \"DE\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 22, \"LanguageDE\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 24, \"QRCodeREQ_StartFlow\"));\n  }\n}\nfunction QRCodeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 16)(2, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_10_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.showPreviousQuestion());\n    });\n    i0.ɵɵelement(3, \"i\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 39)(9, \"div\", 40);\n    i0.ɵɵelement(10, \"img\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 42)(12, \"p\", 43);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\")(16, \"li\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"li\");\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"p\", 44);\n    i0.ɵɵtext(26);\n    i0.ɵɵpipe(27, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\", 19)(29, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_10_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.showNextQuestion(1));\n    });\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, \"QRCodeREQ_1_title\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 9, \"QRCodeREQ_1_subtext\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 11, \"QRCodeREQ_1_sub-subtext1\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 13, \"QRCodeREQ_1_sub-subtext2\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 15, \"QRCodeREQ_1_sub-subtext3\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 17, \"QRCodeREQ_1_subtitle-button\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 19, \"QRCodeREQ_nextbutton\"));\n  }\n}\nfunction QRCodeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"div\", 16)(2, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_11_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.showPreviousQuestion());\n    });\n    i0.ɵɵelement(3, \"i\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"div\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 39)(10, \"div\", 40);\n    i0.ɵɵelement(11, \"img\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 42)(13, \"p\", 43);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 44);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"p\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"div\", 19)(26, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_11_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.flowGeneric());\n    });\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_11_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.flowSpecific());\n    });\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, \"QRCodeREQ_2_title\"));\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 9, \"QRCodeREQ_2_type1_title\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 11, \"QRCodeREQ_2_type1_text\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 13, \"QRCodeREQ_2_type2_title\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 15, \"QRCodeREQ_2_type2_text\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 17, \"QRCodeREQ_2_button_generic\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 19, \"QRCodeREQ_2_button_specific\"));\n  }\n}\nfunction QRCodeComponent_div_12_tr_15_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 55);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_12_tr_15_td_4_Template_td_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const i_r30 = i0.ɵɵnextContext().index;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.deleteFieldValue(i_r30));\n    });\n    i0.ɵɵelement(1, \"i\", 56);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QRCodeComponent_div_12_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 52)(2, \"input\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function QRCodeComponent_div_12_tr_15_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r36);\n      const i_r30 = restoredCtx.index;\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.fieldArray[i_r30] = $event);\n    });\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, QRCodeComponent_div_12_tr_15_td_4_Template, 2, 0, \"td\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r29 = ctx.$implicit;\n    const i_r30 = ctx.index;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", field_r29);\n    i0.ɵɵproperty(\"ngModel\", ctx_r28.fieldArray[i_r30]);\n    i0.ɵɵattribute(\"placeholder\", i0.ɵɵpipeBind1(3, 4, \"QRCodeREQ_3_placeholder\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.fieldArray.length > 1);\n  }\n}\nfunction QRCodeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"div\", 16)(2, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_12_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.showPreviousQuestion());\n    });\n    i0.ɵɵelement(3, \"i\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"div\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 39)(10, \"div\", 42)(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"table\");\n    i0.ɵɵtemplate(15, QRCodeComponent_div_12_tr_15_Template, 5, 6, \"tr\", 48);\n    i0.ɵɵelementStart(16, \"tr\", 49)(17, \"td\", 50);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_12_Template_td_click_17_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.fieldArray.push(ctx_r39.newAttribute));\n    });\n    i0.ɵɵelement(18, \"i\", 51);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"translate\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(21, \"div\", 19)(22, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function QRCodeComponent_div_12_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.showNextQuestion(1));\n    });\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 6, \"QRCodeREQ_3_title\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 8, \"QRCodeREQ_3_subtext\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.fieldArray)(\"ngForTrackBy\", ctx_r5.trackByFn);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 10, \"QRCodeREQ_3_addgoal\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 12, \"QRCodeREQ_nextbutton\"));\n  }\n}\nfunction QRCodeComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 57)(1, \"div\", 16)(2, \"div\", 17)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 39)(7, \"div\", 40);\n    i0.ɵɵelement(8, \"img\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 42)(10, \"p\", 43);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, \"QRCodeREQ_5_title\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 5, \"QRCodeREQ_5_subtitle\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 7, \"QRCodeREQ_5_subtext\"));\n  }\n}\nexport class QRCodeComponent {\n  constructor(translateService, apiService, dataService, userService, logginService) {\n    this.translateService = translateService;\n    this.apiService = apiService;\n    this.dataService = dataService;\n    this.userService = userService;\n    this.logginService = logginService;\n    this.loading = false;\n    this.name = \"\";\n    this.GenericQR = false;\n    this.currentQuestionId = 0;\n    this.fieldArray = [\"\"];\n    this.giftPurposes = [];\n    this.isEmailValid = true;\n    this.allQrCodes = [];\n    this.qrCodes = [];\n    this.email = this.dataService.getData('UserEmail');\n    this.phonenumber = \"\";\n    this.comments = \"\";\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.apiService.getData(`v2/organisations/${this.userService.CurrentCollectGroup.OrgId}/collectgroups/${this.userService.CurrentCollectGroup.GUID}/collectionmediums?collectionMediumTypes=${CollectionMediumType.QrCodeDefault}`).then(resp => {\n      this.logginService.info(\"Succesfully fetched qr code list\");\n      this.allQrCodes = resp;\n      this.qrCodes = this.allQrCodes.filter(code => code.Active === true);\n      this.loading = false;\n    }).catch(error => this.handleError(error));\n    let savedLanguage = this.dataService.getData(\"SelectedQRCodeLanguage\");\n    if (!savedLanguage || savedLanguage.length === 0) {\n      let currentCollectGroupCountry = this.userService.CurrentCollectGroup.Country;\n      savedLanguage = currentCollectGroupCountry === \"NL\" || currentCollectGroupCountry == \"BE\" ? \"NL\" : \"EN\";\n    }\n    if (!this.isNullOrUndefined(savedLanguage) && savedLanguage.length == 2) {\n      this.selectedLanguage = savedLanguage;\n      this.logginService.info(\"Set language in QR component from Local storage\");\n    } else if (!this.isNullOrUndefined(navigator.language)) {\n      this.selectedLanguage = navigator.language.substring(0, 2);\n      this.logginService.info(\"Set language in QR component from navigator\");\n    }\n    this.userService.collectGroupChanged.subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n  submitBatch() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.logginService.info(\"Submitting batch QR Request\");\n      _this.loading = true;\n      let body = {\n        commands: []\n      };\n      body.commands = _this.fieldArray.map(x => {\n        return {\n          allocationName: x,\n          CollectionMediumType: QrCodeType.Default\n        };\n      });\n      yield _this.apiService.postData(`v2/organisations/${_this.userService.CurrentCollectGroup.OrgId}/collectgroups/${_this.userService.CurrentCollectGroup.GUID}/collectionmediums/${_this.selectedLanguage.toLowerCase()}/batch`, body).then(response => {\n        if (!_this.isNullOrUndefined(response)) _this.downloadZip(response.Base64Result, \"\");else _this.handleError(`Batch: couldnt get qr codes bacause response was null or undefined.`);\n      }).catch(error => {\n        _this.handleError(error);\n      });\n    })();\n  }\n  submitGeneric() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.logginService.info(\"Submitting generic QR Request\");\n      _this2.loading = true;\n      let body = {\n        AllocationName: null,\n        CollectionMediumType: QrCodeType.Default\n      };\n      yield _this2.apiService.postData(`v2/organisations/${_this2.userService.CurrentCollectGroup.OrgId}/collectgroups/${_this2.userService.CurrentCollectGroup.GUID}/collectionmediums`, body).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          let mediumId = response.Result;\n          if (!_this2.isNullOrUndefined(mediumId)) {\n            _this2.apiService.getData(`v2/organisations/${_this2.userService.CurrentCollectGroup.OrgId}/collectgroups/${_this2.userService.CurrentCollectGroup.GUID}/collectionmediums/${mediumId}/export/${_this2.selectedLanguage.toLowerCase()}`).then(response2 => {\n              if (!_this2.isNullOrUndefined(response2)) _this2.downloadZip(response2.Base64Result);else _this2.handleError(`Couldnt get QR code from response because response is null or undefined`);\n            }).catch(error => {\n              _this2.handleError(error);\n            });\n          } else {\n            _this2.handleError(`Couldn't get medium id from response: ${response}`);\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(error => {\n        _this2.handleError(error);\n      });\n    })();\n  }\n  showModalForDelete(qrcode) {\n    this.currentQuestionId = -1;\n    this.qrCodeToDelete = qrcode;\n  }\n  cancelDelete() {\n    this.currentQuestionId = 0;\n    this.qrCodeToDelete = null;\n  }\n  deleteQrcode() {\n    this.loading = true;\n    let body = {\n      MediumId: this.qrCodeToDelete.MediumId,\n      Active: false\n    };\n    this.apiService.putData(`v2/organisations/${this.userService.CurrentCollectGroup.OrgId}/collectgroups/${this.userService.CurrentCollectGroup.GUID}/collectionmediums`, body).then(response => {\n      if (!this.isNullOrUndefined(response)) {\n        this.qrCodes = this.qrCodes.filter(code => {\n          return code.MediumId !== this.qrCodeToDelete.MediumId;\n        });\n        this.qrCodeToDelete = null;\n        this.loading = false;\n      } else this.handleError(`Couldn't delete qrCode because response was null`);\n    });\n    this.currentQuestionId = 0;\n  }\n  flowGeneric() {\n    this.GenericQR = true;\n    let respsonse;\n    this.translateService.get(\"QRCodeREQ_generic\").subscribe(res => respsonse = res);\n    this.fieldArray = [String(respsonse)];\n    this.submitGeneric();\n    this.showNextQuestion(2);\n  }\n  saveLanguageAndContinue() {\n    this.dataService.writeData(\"SelectedQRCodeLanguage\", this.selectedLanguage, true);\n    this.showNextQuestion(1);\n  }\n  flowSpecific() {\n    this.GenericQR = false;\n    this.showNextQuestion(1);\n  }\n  undoProces() {\n    if (this.GenericQR) {\n      this.showPreviousQuestion(2);\n      this.fieldArray = [\"\"];\n    } else {\n      this.showPreviousQuestion(1);\n    }\n  }\n  showNextQuestion(value) {\n    switch (this.currentQuestionId) {\n      case 2:\n        if (this.fieldArray[0] == null) {\n          this.fieldArray.push(\"\");\n        }\n        this.currentQuestionId += value;\n        break;\n      case 3:\n        this.fieldArray = this.fieldArray.filter(element => !this.isNullOrUndefined(element) && element.trim() !== \"\");\n        this.fieldArray.forEach((element, index) => {\n          this.fieldArray[index] = element.trim();\n        });\n        if (this.fieldArray.length > 0) {\n          this.currentQuestionId += value;\n          this.submitBatch();\n        } else {\n          console.log(this.fieldArray);\n          this.fieldArray.push(\"\");\n          console.log(this.fieldArray);\n          alert(this.translateService.instant(\"QRCode_OopsForgotSomething\").toString());\n        }\n        break;\n      default:\n        this.currentQuestionId += value;\n        break;\n    }\n  }\n  showPreviousQuestion(value = 1) {\n    switch (this.currentQuestionId) {\n      case 4:\n        if (this.fieldArray[0] == null) {\n          this.fieldArray.push(\"\");\n        }\n        break;\n      default:\n        break;\n    }\n    this.currentQuestionId -= value;\n  }\n  deleteFieldValue(index) {\n    this.fieldArray.splice(index, 1);\n  }\n  trackByFn(index, item) {\n    return index;\n  }\n  handleError(error) {\n    this.translateService.get(\"Error_Generic\").subscribe(translation => {\n      alert(translation);\n    });\n    this.logginService.error(`An error occurred in the QR code flow - ${error}`);\n    this.loading = false;\n  }\n  downloadQr(value, name) {\n    this.loading = true;\n    this.apiService.getData(`v2/organisations/${this.userService.CurrentCollectGroup.OrgId}/collectgroups/${this.userService.CurrentCollectGroup.GUID}/collectionmediums/${value}/export/${this.selectedLanguage.toLowerCase()}`).then(response => {\n      if (!this.isNullOrUndefined(response)) this.downloadZip(response.Base64Result, name);else this.handleError(`Couldnt get list of qr codes because response was null`);\n    });\n  }\n  downloadZip(response, name = null) {\n    try {\n      let blob = this.b64toBlob(response, \"application/zip\", 512);\n      let blobUrl = URL.createObjectURL(blob);\n      let button = document.getElementById(\"hiddenQrButton\");\n      button.setAttribute(\"href\", blobUrl);\n      if (name == null) name = ` - ${this.translateService.instant(\"QRCodeREQ_generic\").toString()}`;else if (name != \"\") {\n        name = ` - ${name}`;\n      }\n      let fileName = `${this.translateService.instant(\"QRCodes\").toString()} - ${this.userService.CurrentCollectGroup.Name}${name}.zip`;\n      button.setAttribute(\"download\", fileName);\n      button.click();\n      window.URL.revokeObjectURL(blobUrl);\n    } catch (error) {\n      this.handleError(error);\n    }\n    this.loading = false;\n  }\n  b64toBlob(b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    let byteCharacters = atob(b64Data);\n    let byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      let slice = byteCharacters.slice(offset, offset + sliceSize);\n      let byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      let byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    let blob = new Blob(byteArrays, {\n      type: contentType\n    });\n    return blob;\n  }\n  isNullOrUndefined(value) {\n    return value === undefined || value === null;\n  }\n  static #_ = this.ɵfac = function QRCodeComponent_Factory(t) {\n    return new (t || QRCodeComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.ApiClientService), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.LoggingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QRCodeComponent,\n    selectors: [[\"qr-code\"]],\n    decls: 15,\n    vars: 7,\n    consts: [[1, \"global-layout\"], [1, \"global-layout-content\"], [1, \"QRCode_screen\"], [\"id\", \"hiddenQrButton\", 2, \"display\", \"none\"], [\"class\", \"QRCode loading-wrapper show-loading-animation\", 4, \"ngIf\"], [\"class\", \"QRCode QRCode_Delete\", \"id\", \"confirm\", 4, \"ngIf\"], [\"class\", \"QRCode\", \"id\", \"question-1\", 4, \"ngIf\"], [\"class\", \"QRCode QRCode1\", \"id\", \"question-1\", 4, \"ngIf\"], [\"class\", \"QRCode QRCode2\", \"id\", \"question-2\", 4, \"ngIf\"], [\"class\", \"QRCode QRCode3\", \"id\", \"question-3\", 4, \"ngIf\"], [\"class\", \"QRCode QRCode5\", \"id\", \"question-4\", 4, \"ngIf\"], [1, \"QRCode\", \"loading-wrapper\", \"show-loading-animation\"], [1, \"loader\"], [\"viewBox\", \"25 25 50 50\", 1, \"circular\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"fill\", \"none\", \"stroke-width\", \"5\", \"stroke-miterlimit\", \"10\", 1, \"path\"], [\"id\", \"confirm\", 1, \"QRCode\", \"QRCode_Delete\"], [1, \"QRCode_Titlebar\"], [1, \"QRCode_Titlebar_middle\"], [1, \"QRCodeListInfo\", \"text\"], [1, \"QRCode_Buttons\"], [1, \"btn\", \"btn-green\", 3, \"click\"], [1, \"btn\", \"btn-blue\", 3, \"click\"], [\"id\", \"question-1\", 1, \"QRCode\"], [1, \"QRCode_ListContainer\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text\"], [1, \"qr-inputs\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\"], [2, \"width\", \"70% !important\"], [4, \"ngIf\"], [1, \"request-qr-btn\", 3, \"click\"], [1, \"fa\", \"fa-download\"], [1, \"request-qr-del\", \"givt-background-orange\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [\"id\", \"question-1\", 1, \"QRCode\", \"QRCode1\"], [1, \"QRCode_Titlebar_left\", 3, \"click\"], [1, \"fas\", \"fa-chevron-left\", \"arrow\"], [1, \"QRCode_Info\"], [1, \"QRCode_Info_Picture\"], [\"src\", \"images/QR-sample.png\", \"alt\", \"Sample QR-code\"], [1, \"QRCode_Info_Text\"], [1, \"subtitle\", \"subtitle-first\"], [1, \"subtitle\"], [\"id\", \"question-2\", 1, \"QRCode\", \"QRCode2\"], [1, \"QRCode_Titlebar_right\"], [\"id\", \"question-3\", 1, \"QRCode\", \"QRCode3\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"add-row\"], [1, \"add-row-td\", \"text\", 3, \"click\"], [1, \"fas\", \"fa-plus-circle\"], [2, \"padding\", \"0px\"], [\"type\", \"text\", 1, \"form-control\", \"textbox\", 2, \"margin-bottom\", \"10px\", 3, \"name\", \"ngModel\", \"ngModelChange\"], [\"class\", \"delete-row\", 3, \"click\", 4, \"ngIf\"], [1, \"delete-row\", 3, \"click\"], [1, \"far\", \"fa-trash-alt\"], [\"id\", \"question-4\", 1, \"QRCode\", \"QRCode5\"], [\"src\", \"images/QR-scan met Givt logo_UK.png\", \"alt\", \"Sample QR-code\"]],\n    template: function QRCodeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"my-alert\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelement(2, \"my-navigation\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"my-titlebar\");\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵelement(6, \"a\", 3);\n        i0.ɵɵtemplate(7, QRCodeComponent_div_7_Template, 4, 0, \"div\", 4)(8, QRCodeComponent_div_8_Template, 17, 12, \"div\", 5)(9, QRCodeComponent_div_9_Template, 32, 26, \"div\", 6)(10, QRCodeComponent_div_10_Template, 32, 21, \"div\", 7)(11, QRCodeComponent_div_11_Template, 32, 21, \"div\", 8)(12, QRCodeComponent_div_12_Template, 25, 14, \"div\", 9)(13, QRCodeComponent_div_13_Template, 16, 9, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"my-footer\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == -1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == 2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == 3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestionId == 4);\n      }\n    },\n    dependencies: [i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, i7.NgForOf, i7.NgIf, i8.NavigationComponent, i9.TitlebarComponent, i10.FooterComponent, i1.TranslatePipe],\n    styles: [\"*[_ngcontent-%COMP%] {\\n    box-sizing: border-box;\\n}\\n\\n@media only screen and (max-width: 480px) {\\n    .global-layout[_ngcontent-%COMP%] {\\n        min-height: calc(100vh - 52px);\\n    }\\n}\\n\\n.input_invalid[_ngcontent-%COMP%] {\\n    border: 1px solid red !important;\\n}\\n\\n.input_invalid[_ngcontent-%COMP%]::placeholder {\\n    color: red;\\n    opacity: 1;\\n    \\n\\n}\\n\\n.fa-chevron-left[_ngcontent-%COMP%] {\\n    padding-top: 3px;\\n}\\n\\n.QRCode_screen[_ngcontent-%COMP%] {\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    position: relative;\\n}\\n\\n.QRCode[_ngcontent-%COMP%] {\\n    position: absolute;\\n    margin: auto;\\n    height: 90%;\\n    width: 90%;\\n    background: #FFFFFF;\\n    border: 1px solid #E3E2E7;\\n    border-radius: 2px;\\n    display: flex;\\n    flex-direction: column;\\n    \\n\\n\\n}\\n\\n\\n\\n\\n\\n.QRCode_Titlebar[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding-right: 20px;\\n    padding-left: 20px;\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    \\n\\n}\\n\\n.QRCode_Titlebar[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    padding: unset;\\n    height: 100%;\\n}\\n\\n.QRCode_Titlebar_left[_ngcontent-%COMP%] {\\n    width: 5%;\\n    \\n\\n    margin: 0;\\n    font-family: 'Avenir_Black';\\n    font-size: 18px;\\n    color: #2C2B57;\\n    text-align: center;\\n    font-weight: normal;\\n    cursor: pointer;\\n}\\n\\n.QRCode_Titlebar_left[_ngcontent-%COMP%]:hover {\\n    background-color: #41c98e;\\n    color: white;\\n    border-radius: .25rem;\\n}\\n\\n.QRCode_Titlebar_middle[_ngcontent-%COMP%] {\\n    width: 90%;\\n}\\n\\n.QRCode_Titlebar_middle[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    padding: unset;\\n}\\n\\n.QRCode_Titlebar_right[_ngcontent-%COMP%] {\\n    width: 5%;\\n}\\n\\n\\n\\n\\n\\n.QRCode_Info[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-height: 100%;\\n    padding-left: 20px;\\n    padding-right: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    \\n\\n    align-items: center;\\n    overflow: auto;\\n}\\n\\n.QRCode_Info_Picture[_ngcontent-%COMP%] {\\n    max-height: 50%;\\n    width: 100%;\\n    margin-bottom: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.QRCode_Info_Picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    height: 100%;\\n    max-width: 100%;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-height: 100%;\\n    min-height: -moz-fit-content;\\n    min-height: fit-content;\\n    font-family: 'Avenir_Light';\\n    color: #2E2957;\\n    font-size: 0.8em;\\n    word-wrap: break-word;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%] {\\n    margin-block-start: 0;\\n    margin-block-end: 0;\\n    font-family: 'Avenir_Heavy';\\n    color: #2E2957;\\n    font-size: 1.2em;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .QRCode_Info_Text[_ngcontent-%COMP%]   .add-row[_ngcontent-%COMP%] {\\n    font-family: 'Avenir';\\n    color: #2E2957;\\n    font-size: 1.0em;\\n    border: 1px solid #ccc;\\n    border-radius: 0.1rem;\\n    box-sizing: border-box;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    \\n\\n    padding-inline-start: 0;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    padding-top: 2px;\\n    padding-bottom: 2px;\\n    \\n\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   .add-row[_ngcontent-%COMP%] {\\n    padding-top: 10px;\\n    text-align: center;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   .add-row-td[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n}\\n\\n.QRCode_Info_Text[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    padding: 5px;\\n}\\n\\n.QRCode_Info_Text2[_ngcontent-%COMP%] {\\n    align-items: flex-start;\\n}\\n\\n.QRCode_Info_Text2[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.ContactInfo[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\n    width: 100%;\\n    resize: none;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    color: #2E2957;\\n    font-size: 1.0em;\\n    border: 1px solid #ccc;\\n    border-radius: 0.1rem;\\n    box-sizing: border-box;\\n}\\n\\n.ContactInfo[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    color: red;\\n}\\n\\n.ContactInfo[_ngcontent-%COMP%]   .Textbox[_ngcontent-%COMP%] {\\n    width: 70%;\\n    margin-top: 10px;\\n    margin-left: 10px;\\n    margin-bottom: 10px;\\n}\\n\\n\\n\\n\\n.request-qr-del[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    color: white; padding: 5px 10px; border-radius: 4px; margin-left: 5px;\\n}\\n\\n.QRCode_Delete[_ngcontent-%COMP%] {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.QRCode_Delete[_ngcontent-%COMP%]   .QRCode_Buttons[_ngcontent-%COMP%] {\\n    margin-top: unset;\\n}\\n\\n\\n\\n\\n.QRCode_Buttons[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding-top: 10px;\\n    padding-bottom: 20px;\\n    padding-left: 20px;\\n    padding-right: 20px;\\n    margin-top: auto;\\n    margin-bottom: O;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.QRCode_Buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    font-weight: 400;\\n    text-align: center;\\n    vertical-align: middle;\\n    -webkit-user-select: none;\\n    user-select: none;\\n    border: 0;\\n    padding: .375rem .75rem;\\n    font-size: 0.8em;\\n    font-family: \\\"Avenir_Heavy\\\";\\n    line-height: 1.5;\\n    border-radius: .25rem;\\n    width: 100%;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;\\n    cursor: pointer;\\n}\\n\\n.QRCode_Buttons[_ngcontent-%COMP%]   .btn-green[_ngcontent-%COMP%] {\\n    margin-bottom: 5px;\\n    margin-top: 5px;\\n    color: #fff;\\n    background: #06B26B;\\n}\\n\\n.QRCode_Buttons[_ngcontent-%COMP%]   .btn-green[_ngcontent-%COMP%]:hover {\\n    background: #41c98e;\\n    \\n\\n}\\n\\n.QRCode_Buttons[_ngcontent-%COMP%]   .btn-blue[_ngcontent-%COMP%] {\\n    margin-bottom: 5px;\\n    margin-top: 5px;\\n    color: #fff;\\n    background: #2E2957;\\n}\\n\\n.QRCode_Buttons[_ngcontent-%COMP%]   .btn-blue[_ngcontent-%COMP%]:hover {\\n    background-color: #41c98e;\\n    \\n\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.QRCode1[_ngcontent-%COMP%]   .QRCode_Info_Text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.QRCode2[_ngcontent-%COMP%]   .QRCode_Info_Picture[_ngcontent-%COMP%] {\\n    display: none;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.QRCode3[_ngcontent-%COMP%]   .delete-row[_ngcontent-%COMP%] {\\n    text-align: center;\\n    cursor: pointer;\\n}\\n\\n.QRCode3[_ngcontent-%COMP%]   .delete-row[_ngcontent-%COMP%]:hover {\\n    background-color: #F16F56;\\n    color: white;\\n    border-radius: .1rem;\\n}\\n\\n.QRCode3[_ngcontent-%COMP%]   .QRCode_Info_Text[_ngcontent-%COMP%]   .add-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:hover {\\n    border-bottom: 2px solid #2C2B57;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.QRCode4[_ngcontent-%COMP%]   .ContactInfo[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    text-align: unset;\\n}\\n\\n\\n\\n\\n\\n@media only screen and (min-width: 481px) {\\n    .QRCode[_ngcontent-%COMP%] {\\n        \\n\\n        max-width: 775px;\\n        max-height: 550px;\\n    }\\n    \\n\\n    \\n\\n    .QRCode_Info[_ngcontent-%COMP%] {\\n        flex-direction: row;\\n        overflow: hidden;\\n    }\\n    .QRCode_Info_Picture[_ngcontent-%COMP%] {\\n        margin-bottom: unset;\\n        margin-right: 20px;\\n    }\\n    .QRCode_Info_Picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n        height: unset;\\n        max-width: 75%;\\n    }\\n    .QRCode_Info_Text[_ngcontent-%COMP%] {\\n        justify-content: center;\\n        margin-left: 20px;\\n        margin-right: 20px;\\n        font-size: 1em;\\n    }\\n    .QRCode_Info_Text[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%] {\\n        font-size: 1em;\\n    }\\n    .QRCode_Info_Text[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n        padding-top: 4px;\\n        padding-bottom: 4px;\\n    }\\n    \\n\\n    .QRCode_Buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n        width: 200px;\\n        font-size: 1em;\\n    }\\n    \\n\\n    \\n\\n    \\n\\n    .QRCode2[_ngcontent-%COMP%]   .QRCode_Info_Picture[_ngcontent-%COMP%] {\\n        display: flex;\\n    }\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n@media only screen and (min-width: 481px) and (max-width: 1000px),\\n(max-height:650px) {\\n    \\n\\n    \\n\\n    .QRCode_Info_Text[_ngcontent-%COMP%] {\\n        font-size: 0.8em;\\n    }\\n    .QRCode_Info_Text[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%] {\\n        font-size: 1em;\\n    }\\n    \\n\\n    .QRCode_Buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n        font-size: 0.8em;\\n    }\\n}\\n\\n\\n\\n\\n\\n.table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin: 0 auto;\\n}\\n\\n.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\\n    height: 30px;\\n}\\n\\n.QRCodeListInfo[_ngcontent-%COMP%] {\\n    width: 80%;\\n    margin: 0 auto;\\n    padding-bottom: 20px;\\n}\\n\\n.QRCodeListInfo[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.QRCode_ListContainer[_ngcontent-%COMP%] {\\n    overflow-x: hidden;\\n    overflow-y: scroll;\\n    width: 100%;\\n    margin: 0 auto;\\n}\\n\\n.QRCode_ListContainer[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.request-qr-btn[_ngcontent-%COMP%] {\\n    background-color: #06B26B;\\n    border-radius: 5px;\\n    padding: 5px 10px;\\n    color: white;\\n    cursor: pointer;\\n}\\n\\n.QRCode.loading-wrapper.show-loading-animation[_ngcontent-%COMP%] {\\n    justify-content: center;\\n}\\n\\n.loading-wrapper[_ngcontent-%COMP%] {\\n    opacity: 0.8 !important;\\n}\"]\n  });\n}\nclass QRRequestBody {}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}