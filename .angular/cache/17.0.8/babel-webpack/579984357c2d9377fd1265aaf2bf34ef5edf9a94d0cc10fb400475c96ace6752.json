{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar router_1 = require(\"@angular/router\");\nvar SlideMenuSub = function () {\n  function SlideMenuSub(slideMenu) {\n    this.slideMenu = slideMenu;\n    this.backLabel = 'Back';\n    this.easing = 'ease-out';\n  }\n  SlideMenuSub.prototype.itemClick = function (event, item, listitem) {\n    var _this = this;\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!item.url) {\n      event.preventDefault();\n    }\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item: item\n      });\n    }\n    if (item.items && !this.slideMenu.animating) {\n      this.slideMenu.left -= this.slideMenu.menuWidth;\n      this.activeItem = listitem;\n      this.slideMenu.animating = true;\n      setTimeout(function () {\n        return _this.slideMenu.animating = false;\n      }, this.effectDuration);\n    }\n  };\n  SlideMenuSub.prototype.ngOnDestroy = function () {\n    this.activeItem = null;\n  };\n  return SlideMenuSub;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], SlideMenuSub.prototype, \"item\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], SlideMenuSub.prototype, \"root\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenuSub.prototype, \"backLabel\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenuSub.prototype, \"menuWidth\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], SlideMenuSub.prototype, \"effectDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenuSub.prototype, \"easing\", void 0);\nSlideMenuSub = __decorate([core_1.Component({\n  selector: 'p-slideMenuSub',\n  template: \"\\n        <ul [ngClass]=\\\"{'ui-helper-reset ui-menu-rootlist':root, 'ui-widget-content ui-corner-all ui-helper-clearfix ui-menu-child':!root}\\\" class=\\\"ui-menu-list\\\"\\n            [style.width.px]=\\\"menuWidth\\\" [style.left.px]=\\\"root ? slideMenu.left : slideMenu.menuWidth\\\" \\n            [style.transitionProperty]=\\\"root ? 'left' : 'none'\\\" [style.transitionDuration]=\\\"effectDuration + 'ms'\\\" [style.transitionTimingFunction]=\\\"easing\\\">\\n            <ng-template ngFor let-child [ngForOf]=\\\"(root ? item : item.items)\\\">\\n                <li *ngIf=\\\"child.separator\\\" class=\\\"ui-menu-separator ui-widget-content\\\">\\n                <li *ngIf=\\\"!child.separator\\\" #listitem [ngClass]=\\\"{'ui-menuitem ui-widget ui-corner-all':true,'ui-menu-parent':child.items,'ui-slidemenuitem-active':listitem==activeItem}\\\">\\n                    <a *ngIf=\\\"!child.routerLink\\\" [href]=\\\"child.url||'#'\\\" class=\\\"ui-menuitem-link ui-corner-all\\\" [attr.target]=\\\"child.target\\\" [attr.title]=\\\"child.title\\\"\\n                        [ngClass]=\\\"{'ui-menuitem-link-parent':child.items,'ui-state-disabled':child.disabled}\\\" \\n                        (click)=\\\"itemClick($event, child, listitem)\\\">\\n                        <span class=\\\"ui-submenu-icon fa fa-fw fa-caret-right\\\" *ngIf=\\\"child.items\\\"></span>\\n                        <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"child.icon\\\" [ngClass]=\\\"child.icon\\\"></span>\\n                        <span class=\\\"ui-menuitem-text\\\">{{child.label}}</span>\\n                    </a>\\n                    <a *ngIf=\\\"child.routerLink\\\" [routerLink]=\\\"child.routerLink\\\" [queryParams]=\\\"child.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" \\n                        [routerLinkActiveOptions]=\\\"child.routerLinkActiveOptions||{exact:false}\\\" [href]=\\\"child.url||'#'\\\" class=\\\"ui-menuitem-link ui-corner-all\\\" \\n                        [attr.target]=\\\"child.target\\\" [attr.title]=\\\"child.title\\\"\\n                        [ngClass]=\\\"{'ui-menuitem-link-parent':child.items,'ui-state-disabled':child.disabled}\\\" \\n                        (click)=\\\"itemClick($event, child, listitem)\\\">\\n                        <span class=\\\"ui-submenu-icon fa fa-fw fa-caret-right\\\" *ngIf=\\\"child.items\\\"></span>\\n                        <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"child.icon\\\" [ngClass]=\\\"child.icon\\\"></span>\\n                        <span class=\\\"ui-menuitem-text\\\">{{child.label}}</span>\\n                    </a>\\n                    <p-slideMenuSub class=\\\"ui-submenu\\\" [item]=\\\"child\\\" [menuWidth]=\\\"menuWidth\\\" *ngIf=\\\"child.items\\\"></p-slideMenuSub>\\n                </li>\\n            </ng-template>\\n        </ul>\\n    \"\n}), __param(0, core_1.Inject(core_1.forwardRef(function () {\n  return SlideMenu;\n}))), __metadata(\"design:paramtypes\", [SlideMenu])], SlideMenuSub);\nexports.SlideMenuSub = SlideMenuSub;\nvar SlideMenu = function () {\n  function SlideMenu(el, domHandler, renderer) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.renderer = renderer;\n    this.menuWidth = 190;\n    this.viewportHeight = 175;\n    this.effectDuration = 250;\n    this.easing = 'ease-out';\n    this.backLabel = 'Back';\n    this.left = 0;\n    this.animating = false;\n  }\n  SlideMenu.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    this.container = this.containerViewChild.nativeElement;\n    this.backwardElement = this.backwardViewChild.nativeElement;\n    this.slideMenuContentElement = this.slideMenuContentViewChild.nativeElement;\n    this.slideMenuContentElement.style.height = this.viewportHeight - this.domHandler.getHiddenElementOuterHeight(this.backwardElement) + 'px';\n    if (this.popup) {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.container);else this.domHandler.appendChild(this.container, this.appendTo);\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', function () {\n        if (!_this.preventDocumentDefault) {\n          _this.hide();\n        }\n        _this.preventDocumentDefault = false;\n      });\n    }\n  };\n  SlideMenu.prototype.toggle = function (event) {\n    if (this.container.offsetParent) this.hide();else this.show(event);\n  };\n  SlideMenu.prototype.show = function (event) {\n    this.preventDocumentDefault = true;\n    this.container.style.display = 'block';\n    this.domHandler.absolutePosition(this.container, event.target);\n    this.domHandler.fadeIn(this.container, 250);\n  };\n  SlideMenu.prototype.hide = function () {\n    this.container.style.display = 'none';\n  };\n  SlideMenu.prototype.onClick = function (event) {\n    this.preventDocumentDefault = true;\n  };\n  SlideMenu.prototype.goBack = function () {\n    this.left += this.menuWidth;\n  };\n  SlideMenu.prototype.ngOnDestroy = function () {\n    if (this.popup) {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n      }\n      if (this.appendTo) {\n        this.el.nativeElement.appendChild(this.container);\n      }\n    }\n  };\n  return SlideMenu;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], SlideMenu.prototype, \"model\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], SlideMenu.prototype, \"popup\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], SlideMenu.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenu.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], SlideMenu.prototype, \"menuWidth\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], SlideMenu.prototype, \"viewportHeight\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], SlideMenu.prototype, \"effectDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenu.prototype, \"easing\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], SlideMenu.prototype, \"backLabel\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], SlideMenu.prototype, \"appendTo\", void 0);\n__decorate([core_1.ViewChild('container'), __metadata(\"design:type\", core_1.ElementRef)], SlideMenu.prototype, \"containerViewChild\", void 0);\n__decorate([core_1.ViewChild('backward'), __metadata(\"design:type\", core_1.ElementRef)], SlideMenu.prototype, \"backwardViewChild\", void 0);\n__decorate([core_1.ViewChild('slideMenuContent'), __metadata(\"design:type\", core_1.ElementRef)], SlideMenu.prototype, \"slideMenuContentViewChild\", void 0);\nSlideMenu = __decorate([core_1.Component({\n  selector: 'p-slideMenu',\n  template: \"\\n        <div #container [ngClass]=\\\"{'ui-menu ui-slidemenu ui-widget ui-widget-content ui-corner-all':true,'ui-menu-dynamic ui-shadow':popup}\\\" \\n            [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-slidemenu-wrapper\\\" [style.height.px]=\\\"viewportHeight\\\">\\n                <div #slideMenuContent class=\\\"ui-slidemenu-content\\\">\\n                    <p-slideMenuSub [item]=\\\"model\\\" root=\\\"root\\\" [menuWidth]=\\\"menuWidth\\\" [effectDuration]=\\\"effectDuration\\\" [easing]=\\\"easing\\\"></p-slideMenuSub>\\n                </div>\\n                <div #backward class=\\\"ui-slidemenu-backward ui-widget-header ui-corner-all\\\" [style.display]=\\\"left ? 'block' : 'none'\\\" (click)=\\\"goBack()\\\">\\n                    <span class=\\\"fa fa-fw fa-caret-left\\\"></span><span>{{backLabel}}</span>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2])], SlideMenu);\nexports.SlideMenu = SlideMenu;\nvar SlideMenuModule = function () {\n  function SlideMenuModule() {}\n  return SlideMenuModule;\n}();\nSlideMenuModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, router_1.RouterModule],\n  exports: [SlideMenu, router_1.RouterModule],\n  declarations: [SlideMenu, SlideMenuSub]\n})], SlideMenuModule);\nexports.SlideMenuModule = SlideMenuModule;\n//# sourceMappingURL=slidemenu.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}