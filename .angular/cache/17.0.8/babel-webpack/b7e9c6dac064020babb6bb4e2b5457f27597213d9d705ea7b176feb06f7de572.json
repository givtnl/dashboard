{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar InputText = function () {\n  function InputText(el) {\n    this.el = el;\n  }\n  InputText.prototype.ngDoCheck = function () {\n    this.updateFilledState();\n  };\n  //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n  InputText.prototype.onInput = function (e) {\n    this.updateFilledState();\n  };\n  InputText.prototype.updateFilledState = function () {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  };\n  return InputText;\n}();\n__decorate([core_1.HostListener('input', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], InputText.prototype, \"onInput\", null);\nInputText = __decorate([core_1.Directive({\n  selector: '[pInputText]',\n  host: {\n    '[class.ui-inputtext]': 'true',\n    '[class.ui-corner-all]': 'true',\n    '[class.ui-state-default]': 'true',\n    '[class.ui-widget]': 'true',\n    '[class.ui-state-filled]': 'filled'\n  }\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef])], InputText);\nexports.InputText = InputText;\nvar InputTextModule = function () {\n  function InputTextModule() {}\n  return InputTextModule;\n}();\nInputTextModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [InputText],\n  declarations: [InputText]\n})], InputTextModule);\nexports.InputTextModule = InputTextModule;\n//# sourceMappingURL=inputtext.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}