{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar Schedule = function () {\n  function Schedule(el, differs) {\n    this.el = el;\n    this.aspectRatio = 1.35;\n    this.defaultView = 'month';\n    this.allDaySlot = true;\n    this.allDayText = 'all-day';\n    this.slotDuration = '00:30:00';\n    this.scrollTime = '06:00:00';\n    this.minTime = '00:00:00';\n    this.maxTime = '24:00:00';\n    this.slotEventOverlap = true;\n    this.dragRevertDuration = 500;\n    this.dragOpacity = .75;\n    this.dragScroll = true;\n    this.timezone = false;\n    this.timeFormat = null;\n    this.onDayClick = new core_1.EventEmitter();\n    this.onDrop = new core_1.EventEmitter();\n    this.onEventClick = new core_1.EventEmitter();\n    this.onEventMouseover = new core_1.EventEmitter();\n    this.onEventMouseout = new core_1.EventEmitter();\n    this.onEventDragStart = new core_1.EventEmitter();\n    this.onEventDragStop = new core_1.EventEmitter();\n    this.onEventDrop = new core_1.EventEmitter();\n    this.onEventResizeStart = new core_1.EventEmitter();\n    this.onEventResizeStop = new core_1.EventEmitter();\n    this.onEventResize = new core_1.EventEmitter();\n    this.onViewRender = new core_1.EventEmitter();\n    this.onViewDestroy = new core_1.EventEmitter();\n    this.differ = differs.find([]).create(null);\n    this.initialized = false;\n  }\n  Schedule.prototype.ngOnInit = function () {\n    var _this = this;\n    this.config = {\n      theme: true,\n      header: this.header,\n      isRTL: this.rtl,\n      weekends: this.weekends,\n      hiddenDays: this.hiddenDays,\n      fixedWeekCount: this.fixedWeekCount,\n      weekNumbers: this.weekNumbers,\n      businessHours: this.businessHours,\n      height: this.height,\n      contentHeight: this.contentHeight,\n      aspectRatio: this.aspectRatio,\n      eventLimit: this.eventLimit,\n      defaultDate: this.defaultDate,\n      locale: this.locale,\n      timezone: this.timezone,\n      timeFormat: this.timeFormat,\n      editable: this.editable,\n      droppable: this.droppable,\n      eventStartEditable: this.eventStartEditable,\n      eventDurationEditable: this.eventDurationEditable,\n      defaultView: this.defaultView,\n      allDaySlot: this.allDaySlot,\n      allDayText: this.allDayText,\n      slotDuration: this.slotDuration,\n      slotLabelInterval: this.slotLabelInterval,\n      snapDuration: this.snapDuration,\n      scrollTime: this.scrollTime,\n      minTime: this.minTime,\n      maxTime: this.maxTime,\n      slotEventOverlap: this.slotEventOverlap,\n      nowIndicator: this.nowIndicator,\n      dragRevertDuration: this.dragRevertDuration,\n      dragOpacity: this.dragOpacity,\n      dragScroll: this.dragScroll,\n      eventOverlap: this.eventOverlap,\n      eventConstraint: this.eventConstraint,\n      eventRender: this.eventRender,\n      dayRender: this.dayRender,\n      navLinks: this.navLinks,\n      dayClick: function (date, jsEvent, view) {\n        _this.onDayClick.emit({\n          'date': date,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      drop: function (date, jsEvent, ui, resourceId) {\n        _this.onDrop.emit({\n          'date': date,\n          'jsEvent': jsEvent,\n          'ui': ui,\n          'resourceId': resourceId\n        });\n      },\n      eventClick: function (calEvent, jsEvent, view) {\n        _this.onEventClick.emit({\n          'calEvent': calEvent,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventMouseover: function (calEvent, jsEvent, view) {\n        _this.onEventMouseover.emit({\n          'calEvent': calEvent,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventMouseout: function (calEvent, jsEvent, view) {\n        _this.onEventMouseout.emit({\n          'calEvent': calEvent,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventDragStart: function (event, jsEvent, ui, view) {\n        _this.onEventDragStart.emit({\n          'event': event,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventDragStop: function (event, jsEvent, ui, view) {\n        _this.onEventDragStop.emit({\n          'event': event,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {\n        _this._updateEvent(event);\n        _this.onEventDrop.emit({\n          'event': event,\n          'delta': delta,\n          'revertFunc': revertFunc,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventResizeStart: function (event, jsEvent, ui, view) {\n        _this.onEventResizeStart.emit({\n          'event': event,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventResizeStop: function (event, jsEvent, ui, view) {\n        _this.onEventResizeStop.emit({\n          'event': event,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      eventResize: function (event, delta, revertFunc, jsEvent, ui, view) {\n        _this._updateEvent(event);\n        _this.onEventResize.emit({\n          'event': event,\n          'delta': delta,\n          'revertFunc': revertFunc,\n          'jsEvent': jsEvent,\n          'view': view\n        });\n      },\n      viewRender: function (view, element) {\n        _this.onViewRender.emit({\n          'view': view,\n          'element': element\n        });\n      },\n      viewDestroy: function (view, element) {\n        _this.onViewDestroy.emit({\n          'view': view,\n          'element': element\n        });\n      }\n    };\n    if (this.options) {\n      for (var prop in this.options) {\n        this.config[prop] = this.options[prop];\n      }\n    }\n  };\n  Schedule.prototype.ngAfterViewChecked = function () {\n    if (!this.initialized && this.el.nativeElement.offsetParent) {\n      this.initialize();\n    }\n  };\n  Schedule.prototype.ngOnChanges = function (changes) {\n    if (this.schedule) {\n      var options = {};\n      for (var change in changes) {\n        if (change !== 'events') {\n          options[change] = changes[change].currentValue;\n        }\n      }\n      if (Object.keys(options).length) {\n        this.schedule.fullCalendar('option', options);\n      }\n    }\n  };\n  Schedule.prototype.initialize = function () {\n    this.schedule = jQuery(this.el.nativeElement.children[0]);\n    this.schedule.fullCalendar(this.config);\n    if (this.events) {\n      this.schedule.fullCalendar('addEventSource', this.events);\n    }\n    this.initialized = true;\n  };\n  Schedule.prototype.ngDoCheck = function () {\n    var changes = this.differ.diff(this.events);\n    if (this.schedule && changes) {\n      this.schedule.fullCalendar('removeEventSources');\n      if (this.events) {\n        this.schedule.fullCalendar('addEventSource', this.events);\n      }\n    }\n  };\n  Schedule.prototype.ngOnDestroy = function () {\n    jQuery(this.el.nativeElement.children[0]).fullCalendar('destroy');\n    this.initialized = false;\n    this.schedule = null;\n  };\n  Schedule.prototype.gotoDate = function (date) {\n    this.schedule.fullCalendar('gotoDate', date);\n  };\n  Schedule.prototype.prev = function () {\n    this.schedule.fullCalendar('prev');\n  };\n  Schedule.prototype.next = function () {\n    this.schedule.fullCalendar('next');\n  };\n  Schedule.prototype.prevYear = function () {\n    this.schedule.fullCalendar('prevYear');\n  };\n  Schedule.prototype.nextYear = function () {\n    this.schedule.fullCalendar('nextYear');\n  };\n  Schedule.prototype.today = function () {\n    this.schedule.fullCalendar('today');\n  };\n  Schedule.prototype.incrementDate = function (duration) {\n    this.schedule.fullCalendar('incrementDate', duration);\n  };\n  Schedule.prototype.changeView = function (viewName) {\n    this.schedule.fullCalendar('changeView', viewName);\n  };\n  Schedule.prototype.getDate = function () {\n    return this.schedule.fullCalendar('getDate');\n  };\n  Schedule.prototype.updateEvent = function (event) {\n    this.schedule.fullCalendar('updateEvent', event);\n  };\n  Schedule.prototype._findEvent = function (id) {\n    var event;\n    if (this.events) {\n      for (var _i = 0, _a = this.events; _i < _a.length; _i++) {\n        var e = _a[_i];\n        if (e.id === id) {\n          event = e;\n          break;\n        }\n      }\n    }\n    return event;\n  };\n  Schedule.prototype._updateEvent = function (event) {\n    var sourceEvent = this._findEvent(event.id);\n    if (sourceEvent) {\n      sourceEvent.start = event.start.format();\n      if (event.end) {\n        sourceEvent.end = event.end.format();\n      }\n    }\n  };\n  return Schedule;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], Schedule.prototype, \"events\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"header\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Schedule.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"rtl\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"weekends\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], Schedule.prototype, \"hiddenDays\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"fixedWeekCount\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"weekNumbers\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"businessHours\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"height\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"contentHeight\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Schedule.prototype, \"aspectRatio\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"eventLimit\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"defaultDate\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"editable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"droppable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"eventStartEditable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"eventDurationEditable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Schedule.prototype, \"defaultView\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"allDaySlot\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Schedule.prototype, \"allDayText\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"slotDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"slotLabelInterval\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"snapDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"scrollTime\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"minTime\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"maxTime\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"slotEventOverlap\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"nowIndicator\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Schedule.prototype, \"dragRevertDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Schedule.prototype, \"dragOpacity\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"dragScroll\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"eventOverlap\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"eventConstraint\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Schedule.prototype, \"locale\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"timezone\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Schedule.prototype, \"timeFormat\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Function)], Schedule.prototype, \"eventRender\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Function)], Schedule.prototype, \"dayRender\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Schedule.prototype, \"navLinks\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Schedule.prototype, \"options\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onDayClick\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onDrop\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventClick\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventMouseover\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventMouseout\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventDragStart\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventDragStop\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventDrop\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventResizeStart\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventResizeStop\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onEventResize\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onViewRender\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Schedule.prototype, \"onViewDestroy\", void 0);\nSchedule = __decorate([core_1.Component({\n  selector: 'p-schedule',\n  template: '<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>'\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.IterableDiffers])], Schedule);\nexports.Schedule = Schedule;\nvar ScheduleModule = function () {\n  function ScheduleModule() {}\n  return ScheduleModule;\n}();\nScheduleModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [Schedule],\n  declarations: [Schedule]\n})], ScheduleModule);\nexports.ScheduleModule = ScheduleModule;\n//# sourceMappingURL=schedule.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}