{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar DataScroller = function () {\n  function DataScroller(el, renderer, domHandler) {\n    this.el = el;\n    this.renderer = renderer;\n    this.domHandler = domHandler;\n    this.onLazyLoad = new core_1.EventEmitter();\n    this.buffer = 0.9;\n    this.dataToRender = [];\n    this.first = 0;\n  }\n  DataScroller.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    if (this.lazy) {\n      this.load();\n    }\n    if (this.loader) {\n      this.scrollFunction = this.renderer.listen(this.loader, 'click', function () {\n        _this.load();\n      });\n    } else {\n      this.bindScrollListener();\n    }\n  };\n  DataScroller.prototype.ngAfterContentInit = function () {\n    var _this = this;\n    this.templates.forEach(function (item) {\n      switch (item.getType()) {\n        case 'item':\n          _this.itemTemplate = item.template;\n          break;\n        default:\n          _this.itemTemplate = item.template;\n          break;\n      }\n    });\n  };\n  Object.defineProperty(DataScroller.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      this._value = val;\n      this.handleDataChange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DataScroller.prototype.handleDataChange = function () {\n    if (this.lazy) this.dataToRender = this.value;else this.load();\n  };\n  DataScroller.prototype.load = function () {\n    if (this.lazy) {\n      this.onLazyLoad.emit({\n        first: this.first,\n        rows: this.rows\n      });\n      this.first = this.first + this.rows;\n    } else {\n      if (this.value) {\n        for (var i = this.first; i < this.first + this.rows; i++) {\n          if (i >= this.value.length) {\n            break;\n          }\n          this.dataToRender.push(this.value[i]);\n        }\n        this.first = this.first + this.rows;\n      }\n    }\n  };\n  DataScroller.prototype.reset = function () {\n    this.first = 0;\n    this.dataToRender = [];\n    this.load();\n  };\n  DataScroller.prototype.isEmpty = function () {\n    return !this.dataToRender || this.dataToRender.length == 0;\n  };\n  DataScroller.prototype.createLazyLoadMetadata = function () {\n    return {\n      first: this.first,\n      rows: this.rows\n    };\n  };\n  DataScroller.prototype.bindScrollListener = function () {\n    var _this = this;\n    if (this.inline) {\n      this.contentElement = this.contentViewChild.nativeElement;\n      this.scrollFunction = this.renderer.listen(this.contentElement, 'scroll', function () {\n        var scrollTop = _this.contentElement.scrollTop;\n        var scrollHeight = _this.contentElement.scrollHeight;\n        var viewportHeight = _this.contentElement.clientHeight;\n        if (scrollTop >= scrollHeight * _this.buffer - viewportHeight) {\n          _this.load();\n        }\n      });\n    } else {\n      this.scrollFunction = this.renderer.listen('window', 'scroll', function () {\n        var docBody = document.body;\n        var docElement = document.documentElement;\n        var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        var winHeight = docElement.clientHeight;\n        var docHeight = Math.max(docBody.scrollHeight, docBody.offsetHeight, winHeight, docElement.scrollHeight, docElement.offsetHeight);\n        if (scrollTop >= docHeight * _this.buffer - winHeight) {\n          _this.load();\n        }\n      });\n    }\n  };\n  DataScroller.prototype.ngOnDestroy = function () {\n    //unbind\n    if (this.scrollFunction) {\n      this.scrollFunction();\n      this.contentElement = null;\n    }\n  };\n  return DataScroller;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], DataScroller.prototype, \"rows\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataScroller.prototype, \"lazy\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], DataScroller.prototype, \"onLazyLoad\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], DataScroller.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], DataScroller.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], DataScroller.prototype, \"buffer\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataScroller.prototype, \"inline\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], DataScroller.prototype, \"scrollHeight\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], DataScroller.prototype, \"loader\", void 0);\n__decorate([core_1.ViewChild('content'), __metadata(\"design:type\", core_1.ElementRef)], DataScroller.prototype, \"contentViewChild\", void 0);\n__decorate([core_1.ContentChild(shared_1.Header), __metadata(\"design:type\", Object)], DataScroller.prototype, \"header\", void 0);\n__decorate([core_1.ContentChild(shared_1.Footer), __metadata(\"design:type\", Object)], DataScroller.prototype, \"footer\", void 0);\n__decorate([core_1.ContentChildren(shared_1.PrimeTemplate), __metadata(\"design:type\", core_1.QueryList)], DataScroller.prototype, \"templates\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DataScroller.prototype, \"value\", null);\nDataScroller = __decorate([core_1.Component({\n  selector: 'p-dataScroller',\n  template: \"\\n    <div [ngClass]=\\\"{'ui-datascroller ui-widget': true, 'ui-datascroller-inline': inline}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n        <div class=\\\"ui-datascroller-header ui-widget-header ui-corner-top\\\" *ngIf=\\\"header\\\">\\n            <ng-content select=\\\"p-header\\\"></ng-content>\\n        </div>\\n        <div #content class=\\\"ui-datascroller-content ui-widget-content\\\" [ngStyle]=\\\"{'max-height': scrollHeight}\\\">\\n            <ul class=\\\"ui-datascroller-list\\\">\\n                <li *ngFor=\\\"let item of dataToRender\\\">\\n                    <ng-template [pTemplateWrapper]=\\\"itemTemplate\\\" [item]=\\\"item\\\"></ng-template>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"ui-datascroller-footer ui-widget-header ui-corner-bottom\\\" *ngIf=\\\"footer\\\">\\n            <ng-content select=\\\"p-footer\\\"></ng-content>\\n        </div>\\n    </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2, domhandler_1.DomHandler])], DataScroller);\nexports.DataScroller = DataScroller;\nvar DataScrollerModule = function () {\n  function DataScrollerModule() {}\n  return DataScrollerModule;\n}();\nDataScrollerModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, shared_1.SharedModule],\n  exports: [DataScroller, shared_1.SharedModule],\n  declarations: [DataScroller]\n})], DataScrollerModule);\nexports.DataScrollerModule = DataScrollerModule;\n//# sourceMappingURL=datascroller.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}