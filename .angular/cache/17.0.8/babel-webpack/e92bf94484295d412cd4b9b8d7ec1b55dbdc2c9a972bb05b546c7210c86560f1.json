{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar animations_1 = require(\"@angular/animations\");\nvar Panel = function () {\n  function Panel(el) {\n    this.el = el;\n    this.collapsed = false;\n    this.expandIcon = 'fa-plus';\n    this.collapseIcon = 'fa-minus';\n    this.showHeader = true;\n    this.collapsedChange = new core_1.EventEmitter();\n    this.onBeforeToggle = new core_1.EventEmitter();\n    this.onAfterToggle = new core_1.EventEmitter();\n  }\n  Panel.prototype.toggle = function (event) {\n    if (this.animating) {\n      return false;\n    }\n    this.animating = true;\n    this.onBeforeToggle.emit({\n      originalEvent: event,\n      collapsed: this.collapsed\n    });\n    if (this.toggleable) {\n      if (this.collapsed) this.expand(event);else this.collapse(event);\n    }\n    event.preventDefault();\n  };\n  Panel.prototype.expand = function (event) {\n    this.collapsed = false;\n    this.collapsedChange.emit(this.collapsed);\n  };\n  Panel.prototype.collapse = function (event) {\n    this.collapsed = true;\n    this.collapsedChange.emit(this.collapsed);\n  };\n  Panel.prototype.getBlockableElement = function () {\n    return this.el.nativeElement.children[0];\n  };\n  Panel.prototype.onToggleDone = function (event) {\n    this.animating = false;\n    this.onAfterToggle.emit({\n      originalEvent: event,\n      collapsed: this.collapsed\n    });\n  };\n  return Panel;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Panel.prototype, \"toggleable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Panel.prototype, \"header\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Panel.prototype, \"collapsed\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Panel.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Panel.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Panel.prototype, \"expandIcon\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Panel.prototype, \"collapseIcon\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Panel.prototype, \"showHeader\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Panel.prototype, \"collapsedChange\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Panel.prototype, \"onBeforeToggle\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Panel.prototype, \"onAfterToggle\", void 0);\n__decorate([core_1.ContentChild(shared_1.Footer), __metadata(\"design:type\", Object)], Panel.prototype, \"footerFacet\", void 0);\nPanel = __decorate([core_1.Component({\n  selector: 'p-panel',\n  template: \"\\n        <div [ngClass]=\\\"'ui-panel ui-widget ui-widget-content ui-corner-all'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all\\\" *ngIf=\\\"showHeader\\\">\\n                <span class=\\\"ui-panel-title\\\" *ngIf=\\\"header\\\">{{header}}</span>\\n                <ng-content select=\\\"p-header\\\"></ng-content>\\n                <a *ngIf=\\\"toggleable\\\" class=\\\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\\\" href=\\\"#\\\"\\n                    (click)=\\\"toggle($event)\\\">\\n                    <span [class]=\\\"collapsed ? 'fa fa-fw ' + expandIcon : 'fa fa-fw ' + collapseIcon\\\"></span>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-panel-content-wrapper\\\" [@panelContent]=\\\"collapsed ? 'hidden' : 'visible'\\\" (@panelContent.done)=\\\"onToggleDone($event)\\\"\\n                [ngClass]=\\\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\\\">\\n                <div class=\\\"ui-panel-content ui-widget-content\\\">\\n                    <ng-content></ng-content>\\n                </div>\\n                \\n                <div class=\\\"ui-panel-footer ui-widget-content\\\" *ngIf=\\\"footerFacet\\\">\\n                    <ng-content select=\\\"p-footer\\\"></ng-content>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n  animations: [animations_1.trigger('panelContent', [animations_1.state('hidden', animations_1.style({\n    height: '0'\n  })), animations_1.state('visible', animations_1.style({\n    height: '*'\n  })), animations_1.transition('visible <=> hidden', animations_1.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))])]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef])], Panel);\nexports.Panel = Panel;\nvar PanelModule = function () {\n  function PanelModule() {}\n  return PanelModule;\n}();\nPanelModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [Panel, shared_1.SharedModule],\n  declarations: [Panel]\n})], PanelModule);\nexports.PanelModule = PanelModule;\n//# sourceMappingURL=panel.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}