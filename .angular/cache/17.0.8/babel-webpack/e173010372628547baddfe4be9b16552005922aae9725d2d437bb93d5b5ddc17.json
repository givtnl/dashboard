{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime, catchError, delay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { compareRows } from '../models/collect-scheduler/row-comparer.function';\nimport { GreaterThanDateValidator } from '../validators/allocation.validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/collects-schedulder.service\";\nimport * as i4 from \"../pipes/iso.datepipe\";\nimport * as i5 from \"../services/logging.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"./navigation.component\";\nimport * as i8 from \"./titlebar.component\";\nimport * as i9 from \"./footer.component\";\nimport * as i10 from \"../directives/google-analytics-directive\";\nimport * as i11 from \"./paginator-component\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction CollectsShedulerComponent_h2_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"CollectRosterError\"));\n  }\n}\nfunction CollectsShedulerComponent_form_7_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 27);\n    i0.ɵɵelement(3, \"circle\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CollectsShedulerComponent_form_7_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"CollectRosterBankAccount\"));\n  }\n}\nfunction CollectsShedulerComponent_form_7_div_29_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const number_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", number_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(number_r9);\n  }\n}\nfunction CollectsShedulerComponent_form_7_div_29_select_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 47);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngValue\", account_r11.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.formatAccount(account_r11.Id), \" \");\n  }\n}\nfunction CollectsShedulerComponent_form_7_div_29_select_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 45);\n    i0.ɵɵtemplate(1, CollectsShedulerComponent_form_7_div_29_select_6_option_1_Template, 2, 2, \"option\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.bankAccounts);\n  }\n}\nconst _c0 = () => [1, 2, 3];\nfunction CollectsShedulerComponent_form_7_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelement(1, \"input\", 31)(2, \"input\", 32)(3, \"input\", 33);\n    i0.ɵɵelementStart(4, \"select\", 34);\n    i0.ɵɵtemplate(5, CollectsShedulerComponent_form_7_div_29_option_5_Template, 2, 2, \"option\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CollectsShedulerComponent_form_7_div_29_select_6_Template, 2, 1, \"select\", 36);\n    i0.ɵɵelementStart(7, \"div\", 37)(8, \"div\", 38)(9, \"div\", 39)(10, \"div\", 40)(11, \"i\", 41);\n    i0.ɵɵlistener(\"click\", function CollectsShedulerComponent_form_7_div_29_Template_i_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r6 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.addEmptyRow(i_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 40)(13, \"i\", 42);\n    i0.ɵɵlistener(\"click\", function CollectsShedulerComponent_form_7_div_29_Template_i_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r6 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.copyRow(i_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 40)(15, \"i\", 43);\n    i0.ɵɵlistener(\"click\", function CollectsShedulerComponent_form_7_div_29_Template_i_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r6 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.removeRow(i_r6));\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const control_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"invalid-row\", (control_r5.get(\"collectId\").errors == null ? null : control_r5.get(\"collectId\").errors.required) || (control_r5.errors == null ? null : control_r5.errors.invalidDate) || (control_r5.errors == null ? null : control_r5.errors.overlap) || (control_r5.get(\"dtBegin\").errors == null ? null : control_r5.get(\"dtBegin\").errors.inValidMinutes) || (control_r5.get(\"dtEnd\").errors == null ? null : control_r5.get(\"dtEnd\").errors.inValidMinutes));\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.bankAccounts.length > 1);\n  }\n}\nfunction CollectsShedulerComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 7)(1, \"div\", 8)(2, \"div\", 9);\n    i0.ɵɵelement(3, \"div\", 10);\n    i0.ɵɵelementStart(4, \"h2\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function CollectsShedulerComponent_form_7_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.addEmptyRow());\n    });\n    i0.ɵɵelement(9, \"i\", 13);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, CollectsShedulerComponent_form_7_div_12_Template, 4, 0, \"div\", 14);\n    i0.ɵɵelementStart(13, \"div\", 15)(14, \"div\", 16);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 16);\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 17);\n    i0.ɵɵtext(21);\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 18);\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(26, CollectsShedulerComponent_form_7_div_26_Template, 3, 3, \"div\", 19);\n    i0.ɵɵelement(27, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 21);\n    i0.ɵɵtemplate(29, CollectsShedulerComponent_form_7_div_29_Template, 16, 6, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 23)(31, \"my-paginator\", 24);\n    i0.ɵɵlistener(\"paginatorChanged\", function CollectsShedulerComponent_form_7_Template_my_paginator_paginatorChanged_31_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.getRows($event));\n    })(\"totalNumberOfPagesChange\", function CollectsShedulerComponent_form_7_Template_my_paginator_totalNumberOfPagesChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.currentTotalNumberOfPages = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 13, \"CollectRosterTitle\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(11, 15, \"CollectRosterBtnAdd\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 17, \"CollectRosterHeaderStartDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 19, \"CollectRosterHeaderEndDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 21, \"CollectRosterHeaderName\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 23, \"Collection\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.bankAccounts.length > 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.form.get(\"collects\").controls);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rowsOnPage\", ctx_r1.form.get(\"collects\").controls.length)(\"totalNumberOfPages\", ctx_r1.currentTotalNumberOfPages)(\"totalCount\", ctx_r1.currentTotalCountOfRows);\n  }\n}\nexport class CollectsShedulerComponent {\n  constructor(formBuilder, userService, service, datePipe, loggingService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.service = service;\n    this.datePipe = datePipe;\n    this.loggingService = loggingService;\n    this.cacheKey = 'CollectSchedulerComponent';\n    this.loading = false;\n    this.bankAccounts = [];\n    this.currentCollectGroupAllocations = [];\n    this.pageSettings = {\n      currentPage: 1,\n      currentRowsPerPage: 10\n    };\n    this.userService.collectGroupChanged.subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n  ngOnInit() {\n    this.service.getAllActiveAccounts(this.userService.CurrentCollectGroup.GUID).pipe(catchError(error => this.handleGenericError(error))).subscribe(response => {\n      this.bankAccounts = response;\n    });\n    this.getRows(this.pageSettings);\n  }\n  get collectsArray() {\n    return this.form.get('collects');\n  }\n  buildSingleForm(scheduler = null, copyId = false) {\n    const form = this.formBuilder.group({\n      id: [scheduler && copyId ? scheduler.Id : 0],\n      dtBegin: [scheduler && scheduler.dtBegin ? this.datePipe.transform(new Date(scheduler.dtBegin), 'yyyy-MM-ddTHH:mm') : null, [Validators.required]],\n      dtEnd: [scheduler && scheduler.dtEnd ? this.datePipe.transform(new Date(scheduler.dtEnd), 'yyyy-MM-ddTHH:mm') : null, [Validators.required]],\n      name: [scheduler ? scheduler.Name : null, [Validators.required, Validators.maxLength(256), Validators.minLength(1)]],\n      collectId: [scheduler ? scheduler.CollectId : 1, [Validators.required, Validators.min(1), Validators.max(3)]],\n      accountId: [scheduler && scheduler.AccountId ? scheduler.AccountId : this.bankAccounts.length > 1 && this.bankAccounts.find(a => a.Primary) ? this.bankAccounts.find(a => a.Primary).Id : null],\n      shouldNotShowError: !copyId\n    }, {\n      validator: GreaterThanDateValidator\n    });\n    form.valueChanges.pipe(debounceTime(1500)).pipe(distinctUntilChanged((oldValue, newValue) => compareRows(oldValue, newValue))).subscribe(x => this.upload(form));\n    return form;\n  }\n  addEmptyRow(index = 0) {\n    this.collectsArray.insert(index, this.buildSingleForm());\n  }\n  removeRow(index) {\n    const toDeleteFormGroup = this.collectsArray.at(index);\n    if (toDeleteFormGroup.value.id > 0) {\n      this.service.deleteAllocation(this.userService.CurrentCollectGroup.GUID, toDeleteFormGroup.value.id).pipe(catchError(error => this.handleGenericError(error))).subscribe(x => this.removeRowConfirm(index));\n    } else {\n      this.removeRowConfirm(index);\n    }\n  }\n  removeRowConfirm(index) {\n    this.collectsArray.removeAt(index);\n  }\n  copyRow(index) {\n    var row = this.collectsArray.at(index).value;\n    this.collectsArray.insert(index, this.buildSingleForm({\n      CollectId: null,\n      Name: row.name,\n      dtBegin: row.dtBegin,\n      dtEnd: row.dtEnd,\n      AccountId: row.accountId\n    }));\n  }\n  getRows(options) {\n    this.loading = true;\n    this.service.getAll(this.userService.CurrentCollectGroup.GUID, options.currentRowsPerPage, options.currentPage).pipe(delay(500)).pipe(catchError(error => this.handleGenericError(error))).subscribe(response => {\n      this.currentCollectGroupAllocations = response.Results;\n      this.currentTotalNumberOfPages = response.TotalNumberOfPages;\n      this.currentTotalCountOfRows = response.TotalCount;\n      this.form = this.formBuilder.group({\n        collects: this.formBuilder.array(this.currentCollectGroupAllocations ? this.currentCollectGroupAllocations.map(x => this.buildSingleForm(x, true)) : [])\n      });\n    }).add(() => this.loading = false);\n  }\n  formatAccount(accountId) {\n    const account = this.bankAccounts.find(x => x.Id === accountId);\n    var string = \"\";\n    if (account.AccountName) {\n      string += `${account.AccountName}`;\n      if (account.Iban) {\n        string += `(...${account.Iban.substr(account.Iban.length - 4)})`;\n      } else if (account.AccountNumber) {\n        string += `(...${account.AccountNumber.substr(account.AccountNumber.length - 4)})`;\n      }\n    } else {\n      if (account.Iban) {\n        string += `${account.Iban}`;\n      } else if (account.AccountNumber) {\n        string += `${account.SortCode}-${account.AccountNumber})`;\n      }\n    }\n    return string;\n  }\n  upload(row) {\n    if (row.invalid) {\n      return;\n    }\n    if (row.value.id && row.value.id > 0) {\n      let command = row.value;\n      command.dtBegin = new Date(command.dtBegin);\n      command.dtEnd = new Date(command.dtEnd);\n      // update existing allocation\n      this.service.updateAllocation(this.userService.CurrentCollectGroup.GUID, row.value.id, row.value).pipe(catchError(error => error.status === 409 || error.status === 422 || error.status === 500 ? this.handleConflict(error, row) : this.handleGenericError())).subscribe(x => this.loggingService.info(`Allocation with id '${row.value.id}' was updated for CollectGroup: ${this.userService.CurrentCollectGroup.Name}`));\n    } else {\n      // create a new allocation\n      let command = row.value;\n      command.dtBegin = new Date(command.dtBegin);\n      command.dtEnd = new Date(command.dtEnd);\n      this.service.createAllocation(this.userService.CurrentCollectGroup.GUID, row.value).pipe(catchError(error => error.status === 409 ? this.handleConflict(error, row) : this.handleGenericError())).subscribe(x => {\n        this.loggingService.info(`Allocation with id '${x.id}' was created for CollectGroup: ${this.userService.CurrentCollectGroup.Name}`);\n        row.patchValue({\n          id: x.id,\n          shouldNotShowError: false\n        });\n      });\n    }\n  }\n  handleConflict(error, form) {\n    if (form.value.shouldNotShowError) form.patchValue({\n      shouldNotShowError: false\n    });\n    form.setErrors({\n      overlap: true\n    });\n    return Observable.throw(error);\n  }\n  handleGenericError(error = null) {\n    console.log(error != null ? error : 'generic error');\n    return Observable.throw(error != null ? error : 'generic error');\n  }\n  hasErrors() {\n    return this.form && this.collectsArray && this.collectsArray.controls.some(formGroup => {\n      return !formGroup.value.shouldNotShowError && (formGroup.errors !== null || Object.keys(formGroup.controls).some(key => formGroup.get(key).errors !== null));\n    });\n  }\n  static #_ = this.ɵfac = function CollectsShedulerComponent_Factory(t) {\n    return new (t || CollectsShedulerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.CollectSchedulerService), i0.ɵɵdirectiveInject(i4.ISODatePipe), i0.ɵɵdirectiveInject(i5.LoggingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CollectsShedulerComponent,\n    selectors: [[\"app-csveditor\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"global-layout\"], [1, \"global-layout-content\"], [1, \"global-layout-main\", \"container\"], [\"id\", \"tabulator-div\"], [\"class\", \"text--danger\", 4, \"ngIf\"], [\"class\", \"roster-form\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"text--danger\"], [1, \"roster-form\", 3, \"formGroup\"], [\"formArrayName\", \"collects\", 1, \"items\", \"roster-body\", \"col-md-12\"], [1, \"roster-controls\", \"roster-title\"], [1, \"col-md-4\"], [1, \"col-md-4\", \"px-0\", \"mx-0\", \"roster-control\"], [\"analytics\", \"\", \"category\", \"Nieuw collecterooster\", \"eventName\", \"Collecterooster - Toevoegen nieuwe rij - knop linksonderaan\", 1, \"col-md-4\", 3, \"click\"], [1, \"fa\", \"fa-plus\"], [\"class\", \"loading-wrapper show-loading-animation\", 4, \"ngIf\"], [1, \"roster-header\", \"row\"], [1, \"col-sm-3\", \"col-md-3\"], [1, \"roster-name\"], [1, \"col-sm-1\", \"col-md-1\", \"text-wrap\"], [\"class\", \"col-sm-2 col-md-2\", 4, \"ngIf\"], [1, \"col-sm-1\", \"col-md-1\"], [1, \"roster-container\"], [\"class\", \"roster-row row\", 3, \"invalid-row\", \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"roster-controls\"], [3, \"rowsOnPage\", \"totalNumberOfPages\", \"totalCount\", \"paginatorChanged\", \"totalNumberOfPagesChange\"], [1, \"loading-wrapper\", \"show-loading-animation\"], [1, \"loader\"], [\"viewBox\", \"25 25 50 50\", 1, \"circular\"], [\"cx\", \"50\", \"cy\", \"50\", \"r\", \"20\", \"fill\", \"none\", \"stroke-width\", \"5\", \"stroke-miterlimit\", \"10\", 1, \"path\"], [1, \"col-sm-2\", \"col-md-2\"], [1, \"roster-row\", \"row\", 3, \"formGroupName\"], [\"type\", \"datetime-local\", \"formControlName\", \"dtBegin\", \"max\", \"9999-12-31T23:59\", 1, \"col-sm-3\", \"col-md-3\"], [\"type\", \"datetime-local\", \"formControlName\", \"dtEnd\", \"max\", \"9999-12-31T23:59\", 1, \"col-sm-3\", \"col-md-3\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"roster-name\"], [\"formControlName\", \"collectId\", \"id\", \"\", 1, \"col-sm-1\", \"col-md-1\", \"custom-select\", \"custom-select-sm\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"col-sm-2 col-md-2 custom-select custom-select-sm\", \"formControlName\", \"accountId\", 4, \"ngIf\"], [1, \"col-sm-1\", \"col-md-1\", \"row-control\", \"remove\"], [1, \"row\", \"mx-0\", \"w-100\"], [1, \"col-md-12\"], [1, \"col-sm-4\", \"col-md-4\", \"row-control-sub\"], [\"analytics\", \"\", \"category\", \"Nieuw collecterooster\", \"eventName\", \"Collecterooster - Toevoegen nieuwe rij\", \"tooltip\", \"Insert\", 1, \"fa\", \"fa-plus\", 3, \"click\"], [\"analytics\", \"\", \"category\", \"Nieuw collecterooster\", \"eventName\", \"Collecterooster - Kopieren rij\", 1, \"fa\", \"fa-copy\", 3, \"click\"], [\"analytics\", \"\", \"category\", \"Nieuw collecterooster\", \"eventName\", \"Collecterooster - Rij verwijderen\", 1, \"fa\", \"fa-times\", 3, \"click\"], [3, \"value\"], [\"formControlName\", \"accountId\", 1, \"col-sm-2\", \"col-md-2\", \"custom-select\", \"custom-select-sm\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n    template: function CollectsShedulerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"my-navigation\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"my-titlebar\");\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵtemplate(6, CollectsShedulerComponent_h2_6_Template, 3, 3, \"h2\", 4)(7, CollectsShedulerComponent_form_7_Template, 32, 25, \"form\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"my-footer\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasErrors());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i6.NgForOf, i6.NgIf, i7.NavigationComponent, i8.TitlebarComponent, i9.FooterComponent, i10.GoogleAnalyticsDirective, i11.PaginatorComponent, i12.TranslatePipe],\n    styles: [\".roster-form[_ngcontent-%COMP%]   .roster-controls[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: flex-end;\\n    height: 40px;\\n    margin-top: 20px;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    padding-left: 20px;\\n    padding-right: 25px;\\n    background-color: #2E2957;\\n    color: white;\\n    border-radius: 4px;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    margin-right: 16px;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-name[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex: 1;\\n    min-height: 1px;\\n    padding-right: 15px;\\n    padding-left: 15px;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-control[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: flex-end;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-control[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: auto;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-title[_ngcontent-%COMP%] {\\n    margin-top: 40px;\\n    margin-bottom: 20px;\\n    text-align: center;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-title[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    align-self: center;\\n    justify-content: center;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-header[_ngcontent-%COMP%] {\\n    height: 30px;\\n    background: #41C98E;\\n    color: white;\\n    font-family: Avenir_Medium;\\n    display: flex;\\n    padding: 0;\\n    margin: 0;\\n    border: 1px solid #2E2957;\\n    border-radius: 4px 4px 0 0;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-header[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    text-align: left;\\n    align-self: center;\\n    border-right: 1px solid #2E2957;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-header[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:last-child {\\n    border-right: none;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%] {\\n    max-height: 70vh;\\n    overflow: auto;\\n    border: 1px solid #2E2957;\\n    border-radius: 0 0 4px 4px;\\n    border-top: none;\\n    color: #2E2957;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .ng-invalid[_ngcontent-%COMP%] {\\n    color: red !important;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%] {\\n    height: 30px;\\n    display: flex;\\n    margin: 0;\\n    padding: 0;\\n    font-family: Avenir_Light;\\n    border-bottom: 1px solid lightgray;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    height: 30px;\\n    background: none;\\n    border: none;\\n    border-right: 1px solid #2E2957;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .custom-select[_ngcontent-%COMP%] {\\n    line-height: 1.5;\\n    font-family: Avenir;\\n    vertical-align: middle;\\n    outline: 0px;\\n    appearance: none;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .custom-select-sm[_ngcontent-%COMP%] {\\n    height: 30px;\\n    padding-top: 0.375rem;\\n    padding-bottom: 0.375rem;\\n    background-color: initial;\\n    border: none;\\n    border-radius: 0px;\\n    border-right: 1px solid #2E2957;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-around;\\n    align-items: center;\\n    height: -webkit-fill-available;\\n    height: -moz-available;\\n    height: stretch;\\n    padding-left: 0;\\n    padding-right: 0;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .row-control-sub[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    padding-left: 0;\\n    padding-right: 0;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    align-self: center;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:nth-child(1)   i[_ngcontent-%COMP%] {\\n    color: #41C98E;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:nth-child(2)   i[_ngcontent-%COMP%] {\\n    color: #2E2957;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]   .row-control[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:nth-child(3)   i[_ngcontent-%COMP%] {\\n    color: #b91a2b;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]:last-of-type {\\n    border: none;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]:last-of-type   .custom-select[_ngcontent-%COMP%] {\\n    outline: 0px;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]:last-of-type   .custom-select-sm[_ngcontent-%COMP%] {\\n    border-bottom: none;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]:hover {\\n    background: lightgrey;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-body[_ngcontent-%COMP%]   .roster-container[_ngcontent-%COMP%]   .roster-row[_ngcontent-%COMP%]:hover   select[_ngcontent-%COMP%] {\\n    background: lightgrey;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-footer[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n    font: 16px \\\"Avenir_Light\\\";\\n    color: red;\\n  }\\n  .roster-form[_ngcontent-%COMP%]   .roster-controls[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    text-decoration: none;\\n    font: 20px \\\"Avenir_Black\\\";\\n    color: #2E2957;\\n  }\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}