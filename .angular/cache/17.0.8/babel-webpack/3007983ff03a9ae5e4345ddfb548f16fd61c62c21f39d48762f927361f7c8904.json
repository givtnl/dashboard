{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as pkg from '../../../package.json';\nimport { environment } from '../../environments/environment';\nlet NavigationComponent = class NavigationComponent {\n  constructor(apiService, dataService, userService, router, translate) {\n    this.apiService = apiService;\n    this.dataService = dataService;\n    this.router = router;\n    this.translate = translate;\n    this.huidigJaar = new Date().getFullYear().toString();\n    this.showMandateLink = false;\n    this.showDashboardItems = true;\n    this.toggleSidebar = false;\n    this.currentCollectGroup = {\n      Name: \"\",\n      GUID: \"\"\n    };\n    this.collectGroups = null;\n    this.versionNumber = \"\";\n    this.userService = userService;\n    this.userService.collectGroupChanged.subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n  ngOnInit() {\n    if (!environment.production) this.versionNumber = pkg['version'];\n    this.showMandateLink = this.userService.GivtOperations;\n    this.huidigJaar = this.huidigJaar;\n    if ((!this.userService.CollectGroups || this.userService.CollectGroups.length === 0) && this.userService.GivtOperations) {\n      this.showDashboardItems = false;\n      var cg = {\n        Name: \"Administratie\",\n        GUID: \"\"\n      };\n      this.collectGroups = [cg];\n      this.currentCollectGroup = cg;\n    } else {\n      this.showDashboardItems = true;\n      if (this.userService.CurrentCollectGroup) {\n        this.collectGroups = this.userService.CollectGroups;\n        this.currentCollectGroup = this.userService.CurrentCollectGroup;\n      }\n    }\n  }\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['']);\n  }\n  toggleFullSidebar() {\n    this.toggleSidebar = !this.toggleSidebar;\n    let sidebar = document.getElementById('sidebar');\n    let sidebarList = document.getElementsByClassName(\"sidebar-title\");\n    if (this.toggleSidebar) {\n      for (let i = 0; i < sidebarList.length; ++i) {\n        sidebar.setAttribute('style', 'width: 141px; padding-right: 20px');\n        sidebarList[i].setAttribute('style', 'display:inline-block !important;');\n      }\n    } else {\n      for (let i = 0; i < sidebarList.length; ++i) {\n        sidebar.setAttribute('style', 'width: 52px; padding-right: 0px');\n        sidebarList[i].setAttribute('style', 'display:none !important');\n      }\n    }\n  }\n};\nNavigationComponent = __decorate([Component({\n  selector: 'my-navigation',\n  templateUrl: '../html/navigation.component.html',\n  styleUrls: ['../css/navigation.component.css']\n})], NavigationComponent);\nexport { NavigationComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}