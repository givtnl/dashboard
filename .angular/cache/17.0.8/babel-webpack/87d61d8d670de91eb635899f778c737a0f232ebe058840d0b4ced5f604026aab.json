{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar Captcha = function () {\n  function Captcha(el, _zone) {\n    this.el = el;\n    this._zone = _zone;\n    this.siteKey = null;\n    this.theme = 'light';\n    this.type = 'image';\n    this.size = 'normal';\n    this.tabindex = 0;\n    this.language = null;\n    this.initCallback = \"initRecaptcha\";\n    this.onResponse = new core_1.EventEmitter();\n    this.onExpire = new core_1.EventEmitter();\n    this._instance = null;\n  }\n  Captcha.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    if (window.grecaptcha) {\n      this.init();\n    } else {\n      window[this.initCallback] = function () {\n        _this.init();\n      };\n    }\n  };\n  Captcha.prototype.init = function () {\n    var _this = this;\n    this._instance = window.grecaptcha.render(this.el.nativeElement.children[0], {\n      'sitekey': this.siteKey,\n      'theme': this.theme,\n      'type': this.type,\n      'size': this.size,\n      'tabindex': this.tabindex,\n      'hl': this.language,\n      'callback': function (response) {\n        _this._zone.run(function () {\n          return _this.recaptchaCallback(response);\n        });\n      },\n      'expired-callback': function () {\n        _this._zone.run(function () {\n          return _this.recaptchaExpiredCallback();\n        });\n      }\n    });\n  };\n  Captcha.prototype.reset = function () {\n    if (this._instance === null) return;\n    window.grecaptcha.reset(this._instance);\n  };\n  Captcha.prototype.getResponse = function () {\n    if (this._instance === null) return null;\n    return window.grecaptcha.getResponse(this._instance);\n  };\n  Captcha.prototype.recaptchaCallback = function (response) {\n    this.onResponse.emit({\n      response: response\n    });\n  };\n  Captcha.prototype.recaptchaExpiredCallback = function () {\n    this.onExpire.emit();\n  };\n  Captcha.prototype.ngOnDestroy = function () {\n    if (this._instance != null) {\n      window.grecaptcha.reset(this._instance);\n    }\n  };\n  return Captcha;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Captcha.prototype, \"siteKey\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Captcha.prototype, \"theme\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Captcha.prototype, \"type\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Captcha.prototype, \"size\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Captcha.prototype, \"tabindex\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Captcha.prototype, \"language\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Captcha.prototype, \"initCallback\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Captcha.prototype, \"onResponse\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Captcha.prototype, \"onExpire\", void 0);\nCaptcha = __decorate([core_1.Component({\n  selector: 'p-captcha',\n  template: \"<div></div>\"\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone])], Captcha);\nexports.Captcha = Captcha;\nvar CaptchaModule = function () {\n  function CaptchaModule() {}\n  return CaptchaModule;\n}();\nCaptchaModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [Captcha],\n  declarations: [Captcha]\n})], CaptchaModule);\nexports.CaptchaModule = CaptchaModule;\n//# sourceMappingURL=captcha.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}