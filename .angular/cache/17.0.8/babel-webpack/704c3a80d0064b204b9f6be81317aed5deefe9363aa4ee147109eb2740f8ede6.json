{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar button_1 = require(\"../button/button\");\nvar shared_1 = require(\"../common/shared\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar OrderList = function () {\n  function OrderList(el, domHandler, objectUtils) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.objectUtils = objectUtils;\n    this.metaKeySelection = true;\n    this.onReorder = new core_1.EventEmitter();\n    this.onSelectionChange = new core_1.EventEmitter();\n    this.onFilterEvent = new core_1.EventEmitter();\n  }\n  OrderList.prototype.ngAfterViewInit = function () {\n    this.listContainer = this.domHandler.findSingle(this.el.nativeElement, 'ul.ui-orderlist-list');\n  };\n  OrderList.prototype.ngAfterContentInit = function () {\n    var _this = this;\n    this.templates.forEach(function (item) {\n      switch (item.getType()) {\n        case 'item':\n          _this.itemTemplate = item.template;\n          break;\n        default:\n          _this.itemTemplate = item.template;\n          break;\n      }\n    });\n  };\n  OrderList.prototype.ngAfterViewChecked = function () {\n    if (this.movedUp || this.movedDown) {\n      var listItems = this.domHandler.find(this.listContainer, 'li.ui-state-highlight');\n      var listItem = void 0;\n      if (listItems.length > 0) {\n        if (this.movedUp) listItem = listItems[0];else listItem = listItems[listItems.length - 1];\n        this.domHandler.scrollInView(this.listContainer, listItem);\n      }\n      this.movedUp = false;\n      this.movedDown = false;\n    }\n  };\n  Object.defineProperty(OrderList.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      this._value = val;\n      if (this.filterValue) {\n        this.filter();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  OrderList.prototype.onItemClick = function (event, item) {\n    var index = this.findIndexInList(item, this.selectedItems);\n    var selected = index != -1;\n    var metaSelection = this.itemTouched ? false : this.metaKeySelection;\n    if (metaSelection) {\n      var metaKey = event.metaKey || event.ctrlKey;\n      if (selected && metaKey) {\n        this.selectedItems.splice(index, 1);\n      } else {\n        this.selectedItems = metaKey ? this.selectedItems || [] : [];\n        this.selectedItems.push(item);\n      }\n    } else {\n      if (selected) {\n        this.selectedItems.splice(index, 1);\n      } else {\n        this.selectedItems = this.selectedItems || [];\n        this.selectedItems.push(item);\n      }\n    }\n    this.onSelectionChange.emit({\n      originalEvent: event,\n      value: this.selectedItems\n    });\n    this.itemTouched = false;\n  };\n  OrderList.prototype.onFilterKeyup = function (event) {\n    this.filterValue = event.target.value.trim().toLowerCase();\n    this.filter();\n    this.onFilterEvent.emit({\n      originalEvent: event,\n      value: this.visibleOptions\n    });\n  };\n  OrderList.prototype.filter = function () {\n    var searchFields = this.filterBy.split(',');\n    this.visibleOptions = this.objectUtils.filter(this.value, searchFields, this.filterValue);\n  };\n  OrderList.prototype.isItemVisible = function (item) {\n    if (this.filterValue && this.filterValue.trim().length) {\n      for (var i = 0; i < this.visibleOptions.length; i++) {\n        if (item == this.visibleOptions[i]) {\n          return true;\n        }\n      }\n    } else {\n      return true;\n    }\n  };\n  OrderList.prototype.onItemTouchEnd = function (event) {\n    this.itemTouched = true;\n  };\n  OrderList.prototype.isSelected = function (item) {\n    return this.findIndexInList(item, this.selectedItems) != -1;\n  };\n  OrderList.prototype.findIndexInList = function (item, list) {\n    var index = -1;\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] == item) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  };\n  OrderList.prototype.moveUp = function (event, listElement) {\n    if (this.selectedItems) {\n      for (var i = 0; i < this.selectedItems.length; i++) {\n        var selectedItem = this.selectedItems[i];\n        var selectedItemIndex = this.findIndexInList(selectedItem, this.value);\n        if (selectedItemIndex != 0) {\n          var movedItem = this.value[selectedItemIndex];\n          var temp = this.value[selectedItemIndex - 1];\n          this.value[selectedItemIndex - 1] = movedItem;\n          this.value[selectedItemIndex] = temp;\n        } else {\n          break;\n        }\n      }\n      this.movedUp = true;\n      this.onReorder.emit(event);\n    }\n  };\n  OrderList.prototype.moveTop = function (event, listElement) {\n    if (this.selectedItems) {\n      for (var i = 0; i < this.selectedItems.length; i++) {\n        var selectedItem = this.selectedItems[i];\n        var selectedItemIndex = this.findIndexInList(selectedItem, this.value);\n        if (selectedItemIndex != 0) {\n          var movedItem = this.value.splice(selectedItemIndex, 1)[0];\n          this.value.unshift(movedItem);\n          listElement.scrollTop = 0;\n        } else {\n          break;\n        }\n      }\n      this.onReorder.emit(event);\n      listElement.scrollTop = 0;\n    }\n  };\n  OrderList.prototype.moveDown = function (event, listElement) {\n    if (this.selectedItems) {\n      for (var i = this.selectedItems.length - 1; i >= 0; i--) {\n        var selectedItem = this.selectedItems[i];\n        var selectedItemIndex = this.findIndexInList(selectedItem, this.value);\n        if (selectedItemIndex != this.value.length - 1) {\n          var movedItem = this.value[selectedItemIndex];\n          var temp = this.value[selectedItemIndex + 1];\n          this.value[selectedItemIndex + 1] = movedItem;\n          this.value[selectedItemIndex] = temp;\n        } else {\n          break;\n        }\n      }\n      this.movedDown = true;\n      this.onReorder.emit(event);\n    }\n  };\n  OrderList.prototype.moveBottom = function (event, listElement) {\n    if (this.selectedItems) {\n      for (var i = this.selectedItems.length - 1; i >= 0; i--) {\n        var selectedItem = this.selectedItems[i];\n        var selectedItemIndex = this.findIndexInList(selectedItem, this.value);\n        if (selectedItemIndex != this.value.length - 1) {\n          var movedItem = this.value.splice(selectedItemIndex, 1)[0];\n          this.value.push(movedItem);\n        } else {\n          break;\n        }\n      }\n      this.onReorder.emit(event);\n      listElement.scrollTop = listElement.scrollHeight;\n    }\n  };\n  OrderList.prototype.onDragStart = function (event, index) {\n    this.dragging = true;\n    this.draggedItemIndex = index;\n    if (this.dragdropScope) {\n      event.dataTransfer.setData(\"text\", this.dragdropScope);\n    }\n  };\n  OrderList.prototype.onDragOver = function (event, index) {\n    if (this.draggedItemIndex !== index && this.draggedItemIndex + 1 !== index) {\n      this.dragOverItemIndex = index;\n      event.preventDefault();\n    }\n  };\n  OrderList.prototype.onDragLeave = function (event, index) {\n    this.dragOverItemIndex = null;\n  };\n  OrderList.prototype.onDrop = function (event, index) {\n    var dropIndex = this.draggedItemIndex > index ? index : index === 0 ? 0 : index - 1;\n    this.objectUtils.reorderArray(this.value, this.draggedItemIndex, dropIndex);\n    this.dragOverItemIndex = null;\n    this.onReorder.emit(event);\n    event.preventDefault();\n  };\n  OrderList.prototype.onDragEnd = function (event) {\n    this.dragging = false;\n  };\n  OrderList.prototype.onListMouseMove = function (event) {\n    if (this.dragging) {\n      var offsetY = this.listViewChild.nativeElement.getBoundingClientRect().top + document.body.scrollTop;\n      var bottomDiff = offsetY + this.listViewChild.nativeElement.clientHeight - event.pageY;\n      var topDiff = event.pageY - offsetY;\n      if (bottomDiff < 25 && bottomDiff > 0) this.listViewChild.nativeElement.scrollTop += 15;else if (topDiff < 25 && topDiff > 0) this.listViewChild.nativeElement.scrollTop -= 15;\n    }\n  };\n  return OrderList;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrderList.prototype, \"header\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrderList.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrderList.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrderList.prototype, \"listStyle\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrderList.prototype, \"responsive\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrderList.prototype, \"filterBy\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrderList.prototype, \"filterPlaceholder\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrderList.prototype, \"metaKeySelection\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrderList.prototype, \"dragdrop\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrderList.prototype, \"dragdropScope\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrderList.prototype, \"onReorder\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrderList.prototype, \"onSelectionChange\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrderList.prototype, \"onFilterEvent\", void 0);\n__decorate([core_1.ViewChild('listelement'), __metadata(\"design:type\", core_1.ElementRef)], OrderList.prototype, \"listViewChild\", void 0);\n__decorate([core_1.ContentChildren(shared_1.PrimeTemplate), __metadata(\"design:type\", core_1.QueryList)], OrderList.prototype, \"templates\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], OrderList.prototype, \"value\", null);\nOrderList = __decorate([core_1.Component({\n  selector: 'p-orderList',\n  template: \"\\n        <div [ngClass]=\\\"{'ui-orderlist ui-widget':true,'ui-orderlist-responsive':responsive}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-orderlist-controls\\\">\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-angle-up\\\" (click)=\\\"moveUp($event,listelement)\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-angle-double-up\\\" (click)=\\\"moveTop($event,listelement)\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-angle-down\\\" (click)=\\\"moveDown($event,listelement)\\\"></button>\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-angle-double-down\\\" (click)=\\\"moveBottom($event,listelement)\\\"></button>\\n            </div>\\n            <div class=\\\"ui-orderlist-list-container\\\">\\n                <div class=\\\"ui-orderlist-caption ui-widget-header ui-corner-top\\\" *ngIf=\\\"header\\\">{{header}}</div>\\n                <div class=\\\"ui-orderlist-filter-container ui-widget-content\\\" *ngIf=\\\"filterBy\\\">\\n                    <input type=\\\"text\\\" role=\\\"textbox\\\" (keyup)=\\\"onFilterKeyup($event)\\\" class=\\\"ui-inputtext ui-widget ui-state-default ui-corner-all\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"filterPlaceholder\\\">\\n                    <span class=\\\"fa fa-search\\\"></span>\\n                </div>\\n                <ul #listelement class=\\\"ui-widget-content ui-orderlist-list ui-corner-bottom\\\" [ngStyle]=\\\"listStyle\\\" (dragover)=\\\"onListMouseMove($event)\\\">\\n                    <ng-template ngFor let-item [ngForOf]=\\\"value\\\" let-i=\\\"index\\\" let-l=\\\"last\\\">\\n                        <li class=\\\"ui-orderlist-droppoint\\\" *ngIf=\\\"dragdrop && isItemVisible(item)\\\" (dragover)=\\\"onDragOver($event, i)\\\" (drop)=\\\"onDrop($event, i)\\\" (dragleave)=\\\"onDragLeave($event)\\\" \\n                            [ngClass]=\\\"{'ui-state-highlight': (i === dragOverItemIndex)}\\\"></li>\\n                        <li class=\\\"ui-orderlist-item\\\"\\n                            [ngClass]=\\\"{'ui-state-highlight':isSelected(item)}\\\" \\n                            (click)=\\\"onItemClick($event,item)\\\" (touchend)=\\\"onItemTouchEnd($event)\\\"\\n                            [style.display]=\\\"isItemVisible(item) ? 'block' : 'none'\\\"\\n                            [draggable]=\\\"dragdrop\\\" (dragstart)=\\\"onDragStart($event, i)\\\" (dragend)=\\\"onDragEnd($event)\\\">\\n                            <ng-template [pTemplateWrapper]=\\\"itemTemplate\\\" [item]=\\\"item\\\" [index]=\\\"i\\\"></ng-template>\\n                        </li>\\n                        <li class=\\\"ui-orderlist-droppoint\\\" *ngIf=\\\"dragdrop && l\\\" (dragover)=\\\"onDragOver($event, i + 1)\\\" (drop)=\\\"onDrop($event, i + 1)\\\" (dragleave)=\\\"onDragLeave($event)\\\" \\n                            [ngClass]=\\\"{'ui-state-highlight': (i + 1 === dragOverItemIndex)}\\\"></li>\\n                    </ng-template>\\n                </ul>\\n            </div>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, objectutils_1.ObjectUtils])], OrderList);\nexports.OrderList = OrderList;\nvar OrderListModule = function () {\n  function OrderListModule() {}\n  return OrderListModule;\n}();\nOrderListModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, button_1.ButtonModule, shared_1.SharedModule],\n  exports: [OrderList, shared_1.SharedModule],\n  declarations: [OrderList]\n})], OrderListModule);\nexports.OrderListModule = OrderListModule;\n//# sourceMappingURL=orderlist.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}