{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar animations_1 = require(\"@angular/animations\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar Accordion = function () {\n  function Accordion(el) {\n    this.el = el;\n    this.onClose = new core_1.EventEmitter();\n    this.onOpen = new core_1.EventEmitter();\n    this.tabs = [];\n  }\n  Accordion.prototype.addTab = function (tab) {\n    this.tabs.push(tab);\n  };\n  Accordion.prototype.getBlockableElement = function () {\n    return this.el.nativeElement.children[0];\n  };\n  Object.defineProperty(Accordion.prototype, \"activeIndex\", {\n    get: function () {\n      return this._activeIndex;\n    },\n    set: function (val) {\n      this._activeIndex = val;\n      if (this.tabs && this.tabs.length && this._activeIndex != null) {\n        for (var i = 0; i < this.tabs.length; i++) {\n          var selected = this.multiple ? this._activeIndex.includes(i) : i === this._activeIndex;\n          var changed = selected !== this.tabs[i].selected;\n          if (changed) {\n            this.tabs[i].animating = true;\n          }\n          this.tabs[i].selected = selected;\n          this.tabs[i].selectedChange.emit(selected);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Accordion;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Accordion.prototype, \"multiple\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Accordion.prototype, \"onClose\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Accordion.prototype, \"onOpen\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Accordion.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Accordion.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Accordion.prototype, \"lazy\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], Accordion.prototype, \"activeIndex\", null);\nAccordion = __decorate([core_1.Component({\n  selector: 'p-accordion',\n  template: \"\\n        <div [ngClass]=\\\"'ui-accordion ui-widget ui-helper-reset'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \"\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef])], Accordion);\nexports.Accordion = Accordion;\nvar AccordionTab = function () {\n  function AccordionTab(accordion) {\n    this.accordion = accordion;\n    this.selectedChange = new core_1.EventEmitter();\n    this.accordion.addTab(this);\n  }\n  AccordionTab.prototype.toggle = function (event) {\n    if (this.disabled || this.animating) {\n      return false;\n    }\n    this.animating = true;\n    var index = this.findTabIndex();\n    if (this.selected) {\n      this.selected = false;\n      this.accordion.onClose.emit({\n        originalEvent: event,\n        index: index\n      });\n    } else {\n      if (!this.accordion.multiple) {\n        for (var i = 0; i < this.accordion.tabs.length; i++) {\n          this.accordion.tabs[i].selected = false;\n          this.accordion.tabs[i].selectedChange.emit(false);\n        }\n      }\n      this.selected = true;\n      this.accordion.onOpen.emit({\n        originalEvent: event,\n        index: index\n      });\n    }\n    this.selectedChange.emit(this.selected);\n    event.preventDefault();\n  };\n  AccordionTab.prototype.findTabIndex = function () {\n    var index = -1;\n    for (var i = 0; i < this.accordion.tabs.length; i++) {\n      if (this.accordion.tabs[i] == this) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  };\n  Object.defineProperty(AccordionTab.prototype, \"lazy\", {\n    get: function () {\n      return this.accordion.lazy;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AccordionTab.prototype, \"hasHeaderFacet\", {\n    get: function () {\n      return this.headerFacet && this.headerFacet.length > 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AccordionTab.prototype.onToggleDone = function (event) {\n    this.animating = false;\n  };\n  AccordionTab.prototype.ngOnDestroy = function () {\n    this.accordion.tabs.splice(this.findTabIndex(), 1);\n  };\n  return AccordionTab;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], AccordionTab.prototype, \"header\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], AccordionTab.prototype, \"selected\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], AccordionTab.prototype, \"disabled\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], AccordionTab.prototype, \"selectedChange\", void 0);\n__decorate([core_1.ContentChildren(shared_1.Header), __metadata(\"design:type\", core_1.QueryList)], AccordionTab.prototype, \"headerFacet\", void 0);\nAccordionTab = __decorate([core_1.Component({\n  selector: 'p-accordionTab',\n  template: \"\\n        <div class=\\\"ui-accordion-header ui-state-default ui-corner-all\\\" [ngClass]=\\\"{'ui-state-active': selected,'ui-state-disabled':disabled}\\\"\\n            (click)=\\\"toggle($event)\\\">\\n            <span class=\\\"fa fa-fw\\\" [ngClass]=\\\"{'fa-caret-down': selected, 'fa-caret-right': !selected}\\\"></span>\\n            <a href=\\\"#\\\" *ngIf=\\\"!hasHeaderFacet\\\" role=\\\"tab\\\" [attr.aria-expanded]=\\\"selected\\\" [attr.aria-selected]=\\\"selected\\\">{{header}}</a>\\n            <a href=\\\"#\\\" *ngIf=\\\"hasHeaderFacet\\\" role=\\\"tab\\\" [attr.aria-expanded]=\\\"selected\\\" [attr.aria-selected]=\\\"selected\\\">\\n                <ng-content select=\\\"p-header\\\"></ng-content>\\n            </a>\\n        </div>\\n        <div class=\\\"ui-accordion-content-wrapper\\\" [@tabContent]=\\\"selected ? 'visible' : 'hidden'\\\" (@tabContent.done)=\\\"onToggleDone($event)\\\"\\n            [ngClass]=\\\"{'ui-accordion-content-wrapper-overflown': !selected||animating}\\\" role=\\\"tabpanel\\\" [attr.aria-hidden]=\\\"!selected\\\">\\n            <div class=\\\"ui-accordion-content ui-widget-content\\\" *ngIf=\\\"lazy ? selected : true\\\">\\n                <ng-content></ng-content>\\n            </div>\\n        </div>\\n    \",\n  animations: [animations_1.trigger('tabContent', [animations_1.state('hidden', animations_1.style({\n    height: '0'\n  })), animations_1.state('visible', animations_1.style({\n    height: '*'\n  })), animations_1.transition('visible <=> hidden', animations_1.animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))])]\n}), __metadata(\"design:paramtypes\", [Accordion])], AccordionTab);\nexports.AccordionTab = AccordionTab;\nvar AccordionModule = function () {\n  function AccordionModule() {}\n  return AccordionModule;\n}();\nAccordionModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [Accordion, AccordionTab],\n  declarations: [Accordion, AccordionTab]\n})], AccordionModule);\nexports.AccordionModule = AccordionModule;\n//# sourceMappingURL=accordion.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}