{"ast":null,"code":"import 'rxjs/add/operator/toPromise';\nimport { reject } from \"q\";\nimport { getApiUrl } from './helpers/api-url.helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./data.service\";\nexport class ApiClientService {\n  constructor(http, router, dataService) {\n    this.http = http;\n    this.router = router;\n    this.dataService = dataService;\n    this.apiUrl = getApiUrl() + '/api/';\n  }\n  delete(path) {\n    let headers = new HttpHeaders();\n    if (this.dataService.getData(\"accessToken\")) {\n      headers.append('authorization', 'Bearer ' + this.dataService.getData(\"accessToken\"));\n    }\n    if (this.dataService.getData(\"CurrentCollectGroup\")) headers.append('CollectGroupId', JSON.parse(this.dataService.getData(\"CurrentCollectGroup\")).GUID);\n    return this.http.delete(this.apiUrl + path, {\n      headers\n    }).toPromise().then(res => {\n      return res;\n    }).catch(err => {\n      console.log(err);\n      return reject(err);\n    });\n  }\n  postData(path, body) {\n    if (!this.dataService.getData(\"accessToken\")) {\n      return;\n    }\n    let json = JSON.stringify(body);\n    //Set the headers\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    headers.append('authorization', 'Bearer ' + this.dataService.getData(\"accessToken\"));\n    if (this.dataService.getData(\"CurrentCollectGroup\")) headers.append('CollectGroupId', JSON.parse(this.dataService.getData(\"CurrentCollectGroup\")).GUID);\n    return this.http.post(this.apiUrl + path, json, {\n      headers\n    }).toPromise().then(res => {\n      try {\n        return res.json();\n      } catch (e) {\n        return res[\"_body\"];\n      }\n    }).catch(err => {\n      if (err.status === 403) {\n        this.router.navigate(['unauthorized']);\n      }\n      try {\n        console.error(JSON.stringify(JSON.parse(err[\"_body\"]), null, 2));\n      } catch (e) {\n        console.error(err[\"_body\"]);\n      }\n      return reject(err);\n    });\n  }\n  deleteData(path) {\n    if (!this.dataService.getData(\"accessToken\")) {\n      return;\n    }\n    // let json = JSON.stringify(body);\n    //Set the headers\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('authorization', 'Bearer ' + this.dataService.getData(\"accessToken\"));\n    if (this.dataService.getData(\"CurrentCollectGroup\")) headers.append('CollectGroupId', JSON.parse(this.dataService.getData(\"CurrentCollectGroup\")).GUID);\n    return this.http.delete(this.apiUrl + path, {\n      headers: headers\n    }).toPromise().then(res => {\n      try {\n        return res;\n      } catch (e) {\n        return res[\"_body\"];\n      }\n    }).catch(err => {\n      if (err.status === 403) {\n        this.router.navigate(['unauthorized']);\n      }\n    });\n  }\n  getData(path) {\n    if (!this.dataService.getData(\"accessToken\")) {\n      return;\n    }\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('authorization', 'Bearer ' + this.dataService.getData(\"accessToken\"));\n    if (this.dataService.getData(\"CurrentCollectGroup\")) headers.append('CollectGroupId', JSON.parse(this.dataService.getData(\"CurrentCollectGroup\")).GUID);\n    //do the http call\n    return this.http.get(this.apiUrl + encodeURI(path), {\n      headers\n    }).toPromise().then(res => {\n      try {\n        return res.json();\n      } catch (e) {\n        return res[\"_body\"];\n      }\n    }).catch(err => {\n      if (err.status === 403 || err.status === 401) {\n        this.router.navigate(['unauthorized']);\n      }\n    });\n  }\n  putData(path, body) {\n    if (!this.dataService.getData(\"accessToken\")) {\n      return;\n    }\n    let json = JSON.stringify(body);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('authorization', 'Bearer ' + this.dataService.getData(\"accessToken\"));\n    if (this.dataService.getData(\"CurrentCollectGroup\")) headers.append('CollectGroupId', JSON.parse(this.dataService.getData(\"CurrentCollectGroup\")).GUID);\n    //do the http call\n    return this.http.put(this.apiUrl + encodeURI(path), json, {\n      headers\n    }).toPromise().then(res => {\n      try {\n        return res.json();\n      } catch (e) {\n        return res[\"_body\"];\n      }\n    }).catch(err => {\n      if (err.status === 403 || err.status === 401) {\n        this.router.navigate(['unauthorized']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ApiClientService_Factory(t) {\n    return new (t || ApiClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiClientService,\n    factory: ApiClientService.ɵfac\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}