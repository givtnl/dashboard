{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar GMap = function () {\n  function GMap(el, differs, cd, zone) {\n    this.el = el;\n    this.cd = cd;\n    this.zone = zone;\n    this.onMapClick = new core_1.EventEmitter();\n    this.onOverlayClick = new core_1.EventEmitter();\n    this.onOverlayDragStart = new core_1.EventEmitter();\n    this.onOverlayDrag = new core_1.EventEmitter();\n    this.onOverlayDragEnd = new core_1.EventEmitter();\n    this.onMapReady = new core_1.EventEmitter();\n    this.onMapDragEnd = new core_1.EventEmitter();\n    this.onZoomChanged = new core_1.EventEmitter();\n    this.differ = differs.find([]).create(null);\n  }\n  GMap.prototype.ngAfterViewChecked = function () {\n    if (!this.map && this.el.nativeElement.offsetParent) {\n      this.initialize();\n    }\n  };\n  GMap.prototype.initialize = function () {\n    var _this = this;\n    this.map = new google.maps.Map(this.el.nativeElement.children[0], this.options);\n    this.onMapReady.emit({\n      map: this.map\n    });\n    if (this.overlays) {\n      for (var _i = 0, _a = this.overlays; _i < _a.length; _i++) {\n        var overlay = _a[_i];\n        overlay.setMap(this.map);\n        this.bindOverlayEvents(overlay);\n      }\n    }\n    this.map.addListener('click', function (event) {\n      _this.zone.run(function () {\n        _this.onMapClick.emit(event);\n      });\n    });\n    this.map.addListener('dragend', function (event) {\n      _this.zone.run(function () {\n        _this.onMapDragEnd.emit(event);\n      });\n    });\n    this.map.addListener('zoom_changed', function (event) {\n      _this.zone.run(function () {\n        _this.onZoomChanged.emit(event);\n      });\n    });\n  };\n  GMap.prototype.bindOverlayEvents = function (overlay) {\n    var _this = this;\n    overlay.addListener('click', function (event) {\n      _this.zone.run(function () {\n        _this.onOverlayClick.emit({\n          originalEvent: event,\n          'overlay': overlay,\n          map: _this.map\n        });\n      });\n    });\n    if (overlay.getDraggable()) {\n      this.bindDragEvents(overlay);\n    }\n  };\n  GMap.prototype.ngDoCheck = function () {\n    var _this = this;\n    var changes = this.differ.diff(this.overlays);\n    if (changes && this.map) {\n      changes.forEachRemovedItem(function (record) {\n        record.item.setMap(null);\n      });\n      changes.forEachAddedItem(function (record) {\n        record.item.setMap(_this.map);\n        record.item.addListener('click', function (event) {\n          _this.zone.run(function () {\n            _this.onOverlayClick.emit({\n              originalEvent: event,\n              overlay: record.item,\n              map: _this.map\n            });\n          });\n        });\n        if (record.item.getDraggable()) {\n          _this.bindDragEvents(record.item);\n        }\n      });\n    }\n  };\n  GMap.prototype.bindDragEvents = function (overlay) {\n    var _this = this;\n    overlay.addListener('dragstart', function (event) {\n      _this.zone.run(function () {\n        _this.onOverlayDragStart.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: _this.map\n        });\n      });\n    });\n    overlay.addListener('drag', function (event) {\n      _this.zone.run(function () {\n        _this.onOverlayDrag.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: _this.map\n        });\n      });\n    });\n    overlay.addListener('dragend', function (event) {\n      _this.zone.run(function () {\n        _this.onOverlayDragEnd.emit({\n          originalEvent: event,\n          overlay: overlay,\n          map: _this.map\n        });\n      });\n    });\n  };\n  GMap.prototype.getMap = function () {\n    return this.map;\n  };\n  return GMap;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], GMap.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], GMap.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], GMap.prototype, \"options\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], GMap.prototype, \"overlays\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onMapClick\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onOverlayClick\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onOverlayDragStart\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onOverlayDrag\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onOverlayDragEnd\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onMapReady\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onMapDragEnd\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], GMap.prototype, \"onZoomChanged\", void 0);\nGMap = __decorate([core_1.Component({\n  selector: 'p-gmap',\n  template: \"<div [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"></div>\"\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.IterableDiffers, core_1.ChangeDetectorRef, core_1.NgZone])], GMap);\nexports.GMap = GMap;\nvar GMapModule = function () {\n  function GMapModule() {}\n  return GMapModule;\n}();\nGMapModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [GMap],\n  declarations: [GMap]\n})], GMapModule);\nexports.GMapModule = GMapModule;\n//# sourceMappingURL=gmap.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}