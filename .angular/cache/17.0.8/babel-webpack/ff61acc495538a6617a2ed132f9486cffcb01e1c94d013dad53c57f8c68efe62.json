{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { isNullOrUndefined } from \"util\";\nlet SettingsComponent = class SettingsComponent {\n  constructor(loggingService, dataService, translateService, userService) {\n    this.loggingService = loggingService;\n    this.dataService = dataService;\n    this.translateService = translateService;\n    this.userService = userService;\n    this._firstDay = 0;\n    this.days = [];\n    this.isSettingsDetailVisible = false;\n    this.isDeepLinkVisible = false;\n    this.isQRCodeSettingVisible = false;\n    this.loadTerms();\n    this.currentCollectGroup = userService.CurrentCollectGroup;\n    this.loadConnectWithGivt();\n    this.loadQRLanguages();\n  }\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    let localDay = this.dataService.getData(\"FirstDayOfWeek\");\n    if (!isNaN(localDay)) {\n      this.firstDay = localDay;\n    }\n    this.translateService.onLangChange.subscribe(event => {\n      this.loadTerms();\n      this.loadConnectWithGivt();\n      this.loadQRLanguages();\n    });\n    if (!isNullOrUndefined(navigator.language)) {\n      this.selectedQRLanguage = navigator.language.substring(0, 2);\n    }\n  }\n  get firstDay() {\n    return this._firstDay;\n  }\n  set firstDay(value) {\n    this._firstDay = value;\n    this.dataService.writeData(\"FirstDayOfWeek\", value, true);\n  }\n  loadQRLanguages() {\n    this.availableLanguages = [{\n      name: this.translateService.instant(\"LanguageEN\"),\n      value: \"en\"\n    }, {\n      name: this.translateService.instant(\"LanguageNL\"),\n      value: \"nl\"\n    }];\n  }\n  loadTerms() {\n    this.days.length = 0;\n    this.days.push(this.translateService.instant(\"Zondag\").toString());\n    this.days.push(this.translateService.instant(\"Monday\").toString());\n    this.days.push(this.translateService.instant(\"Tuesday\").toString());\n    this.days.push(this.translateService.instant(\"Wednesday\").toString());\n    this.days.push(this.translateService.instant(\"Thursday\").toString());\n    this.days.push(this.translateService.instant(\"Friday\").toString());\n    this.days.push(this.translateService.instant(\"Saturday\").toString());\n  }\n  loadConnectWithGivt() {\n    this.requestMediumIdTitle = this.translateService.instant(\"RequestMediumIdTitle\").toString();\n    this.requestMediumIdTitle = this.requestMediumIdTitle.replace(\"{0}\", this.currentCollectGroup.Name);\n    this.requestMediumIdTitle = this.requestMediumIdTitle.replace(\"{1}\", this.currentCollectGroup.Namespace);\n    if (this.userService && this.userService.CurrentCollectGroup.Country !== 'US') {\n      this.requestMediumIdBody = this.translateService.instant(\"RequestMediumIdBody\");\n    } else {\n      this.requestMediumIdBody = this.translateService.instant(\"RequestMediumIdBodyUS\");\n    }\n    this.requestMediumIdManual = this.translateService.instant(\"RequestMediumIdManual\");\n  }\n  goBack() {\n    window.history.back();\n  }\n  goBackToSettings() {\n    this.isSettingsDetailVisible = false;\n  }\n  copyNamespace() {\n    let copyText = document.getElementById(\"cg-namespace\");\n    copyText.focus();\n    copyText.select();\n    document.execCommand(\"Copy\");\n  }\n  saveQRCodeLanguage() {\n    this.dataService.writeData(\"SelectedQRCodeLanguage\", this.selectedQRLanguage, true);\n    var button = document.getElementById(\"QRSET\");\n    button.classList.add(\"qr-check-fade\");\n    this.loggingService.info(`QR Code language changed to ${this.selectedQRLanguage} for collectgroup: ${this.userService.CurrentCollectGroup.Name}`);\n  }\n};\nSettingsComponent = __decorate([Component({\n  selector: \"settings\",\n  templateUrl: '../html/settings.component.html',\n  styleUrls: ['../css/settings.component.css']\n})], SettingsComponent);\nexport { SettingsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}