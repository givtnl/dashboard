{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = function () {\n  function InputTextarea(el) {\n    this.el = el;\n    this.onResize = new core_1.EventEmitter();\n  }\n  InputTextarea.prototype.ngOnInit = function () {\n    this.rowsDefault = this.rows;\n    this.colsDefault = this.cols;\n  };\n  InputTextarea.prototype.ngDoCheck = function () {\n    this.updateFilledState();\n  };\n  //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n  InputTextarea.prototype.onInput = function (e) {\n    this.updateFilledState();\n  };\n  InputTextarea.prototype.updateFilledState = function () {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  };\n  InputTextarea.prototype.onFocus = function (e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  };\n  InputTextarea.prototype.onBlur = function (e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  };\n  InputTextarea.prototype.onKeyup = function (e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  };\n  InputTextarea.prototype.resize = function (event) {\n    var linesCount = 0,\n      lines = this.el.nativeElement.value.split('\\n');\n    for (var i = lines.length - 1; i >= 0; --i) {\n      linesCount += Math.floor(lines[i].length / this.colsDefault + 1);\n    }\n    this.rows = linesCount >= this.rowsDefault ? linesCount + 1 : this.rowsDefault;\n    this.onResize.emit(event || {});\n  };\n  return InputTextarea;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], InputTextarea.prototype, \"autoResize\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], InputTextarea.prototype, \"rows\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], InputTextarea.prototype, \"cols\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], InputTextarea.prototype, \"onResize\", void 0);\n__decorate([core_1.HostListener('input', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], InputTextarea.prototype, \"onInput\", null);\n__decorate([core_1.HostListener('focus', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], InputTextarea.prototype, \"onFocus\", null);\n__decorate([core_1.HostListener('blur', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], InputTextarea.prototype, \"onBlur\", null);\n__decorate([core_1.HostListener('keyup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], InputTextarea.prototype, \"onKeyup\", null);\nInputTextarea = __decorate([core_1.Directive({\n  selector: '[pInputTextarea]',\n  host: {\n    '[class.ui-inputtext]': 'true',\n    '[class.ui-corner-all]': 'true',\n    '[class.ui-state-default]': 'true',\n    '[class.ui-widget]': 'true',\n    '[class.ui-state-filled]': 'filled',\n    '[attr.rows]': 'rows',\n    '[attr.cols]': 'cols'\n  }\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef])], InputTextarea);\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = function () {\n  function InputTextareaModule() {}\n  return InputTextareaModule;\n}();\nInputTextareaModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [InputTextarea],\n  declarations: [InputTextarea]\n})], InputTextareaModule);\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}