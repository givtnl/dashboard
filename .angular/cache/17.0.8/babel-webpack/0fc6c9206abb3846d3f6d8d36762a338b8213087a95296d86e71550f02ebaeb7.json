{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar router_1 = require(\"@angular/router\");\nvar MenuItemContent = function () {\n  function MenuItemContent(menu) {\n    this.menu = menu;\n  }\n  return MenuItemContent;\n}();\n__decorate([core_1.Input(\"pMenuItemContent\"), __metadata(\"design:type\", Object)], MenuItemContent.prototype, \"item\", void 0);\nMenuItemContent = __decorate([core_1.Component({\n  selector: '[pMenuItemContent]',\n  template: \"\\n        <a *ngIf=\\\"!item.routerLink\\\" [href]=\\\"item.url||'#'\\\" class=\\\"ui-menuitem-link ui-corner-all\\\" [attr.target]=\\\"item.target\\\" [attr.title]=\\\"item.title\\\"\\n            [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" (click)=\\\"menu.itemClick($event, item)\\\">\\n            <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"item.icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n        </a>\\n        <a *ngIf=\\\"item.routerLink\\\" [routerLink]=\\\"item.routerLink\\\" [queryParams]=\\\"item.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" \\n            [routerLinkActiveOptions]=\\\"item.routerLinkActiveOptions||{exact:false}\\\" class=\\\"ui-menuitem-link ui-corner-all\\\" [attr.target]=\\\"item.target\\\"\\n             [attr.title]=\\\"item.title\\\" [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" (click)=\\\"menu.itemClick($event, item)\\\">\\n            <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"item.icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n        </a>\\n    \"\n}), __param(0, core_1.Inject(core_1.forwardRef(function () {\n  return Menu;\n}))), __metadata(\"design:paramtypes\", [Menu])], MenuItemContent);\nexports.MenuItemContent = MenuItemContent;\nvar Menu = function () {\n  function Menu(el, domHandler, renderer) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.renderer = renderer;\n  }\n  Menu.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    this.container = this.containerViewChild.nativeElement;\n    if (this.popup) {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.container);else this.domHandler.appendChild(this.container, this.appendTo);\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', function () {\n        if (!_this.preventDocumentDefault) {\n          _this.hide();\n        }\n        _this.preventDocumentDefault = false;\n      });\n    }\n  };\n  Menu.prototype.toggle = function (event) {\n    if (this.container.offsetParent) this.hide();else this.show(event);\n    this.preventDocumentDefault = true;\n  };\n  Menu.prototype.onResize = function (event) {\n    if (this.onResizeTarget && this.container.offsetParent) {\n      this.domHandler.absolutePosition(this.container, this.onResizeTarget);\n    }\n  };\n  Menu.prototype.show = function (event) {\n    var target = event.currentTarget;\n    this.onResizeTarget = event.currentTarget;\n    this.container.style.display = 'block';\n    this.domHandler.absolutePosition(this.container, target);\n    this.domHandler.fadeIn(this.container, 250);\n    this.preventDocumentDefault = true;\n  };\n  Menu.prototype.hide = function () {\n    this.container.style.display = 'none';\n  };\n  Menu.prototype.itemClick = function (event, item) {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!item.url) {\n      event.preventDefault();\n    }\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item: item\n      });\n    }\n    if (this.popup) {\n      this.hide();\n    }\n  };\n  Menu.prototype.ngOnDestroy = function () {\n    if (this.popup) {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n      }\n      if (this.appendTo) {\n        this.el.nativeElement.appendChild(this.container);\n      }\n    }\n  };\n  Menu.prototype.hasSubMenu = function () {\n    if (this.model) {\n      for (var _i = 0, _a = this.model; _i < _a.length; _i++) {\n        var item = _a[_i];\n        if (item.items) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  return Menu;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], Menu.prototype, \"model\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Menu.prototype, \"popup\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Menu.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Menu.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Menu.prototype, \"appendTo\", void 0);\n__decorate([core_1.ViewChild('container'), __metadata(\"design:type\", core_1.ElementRef)], Menu.prototype, \"containerViewChild\", void 0);\nMenu = __decorate([core_1.Component({\n  selector: 'p-menu',\n  template: \"\\n        <div #container [ngClass]=\\\"{'ui-menu ui-widget ui-widget-content ui-corner-all ui-helper-clearfix':true,'ui-menu-dynamic ui-shadow':popup}\\\" \\n            [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" (click)=\\\"preventDocumentDefault=true\\\">\\n            <ul class=\\\"ui-menu-list ui-helper-reset\\\">\\n                <ng-template ngFor let-submenu [ngForOf]=\\\"model\\\" *ngIf=\\\"hasSubMenu()\\\">\\n                    <li class=\\\"ui-menu-separator ui-widget-content\\\" *ngIf=\\\"submenu.separator\\\" [ngClass]=\\\"{'ui-helper-hidden': submenu.visible === false}\\\"></li>\\n                    <li class=\\\"ui-widget-header ui-corner-all\\\" *ngIf=\\\"!submenu.separator\\\" [ngClass]=\\\"{'ui-helper-hidden': submenu.visible === false}\\\"><h3>{{submenu.label}}</h3></li>\\n                    <ng-template ngFor let-item [ngForOf]=\\\"submenu.items\\\">\\n                        <li class=\\\"ui-menu-separator ui-widget-content\\\" *ngIf=\\\"item.separator\\\" [ngClass]=\\\"{'ui-helper-hidden': (item.visible === false ||\\u00A0submenu.visible === false)}\\\"></li>\\n                        <li class=\\\"ui-menuitem ui-widget ui-corner-all\\\" *ngIf=\\\"!item.separator\\\" [pMenuItemContent]=\\\"item\\\" [ngClass]=\\\"{'ui-helper-hidden': (item.visible === false || submenu.visible === false)}\\\"></li>\\n                    </ng-template>\\n                </ng-template>\\n                <ng-template ngFor let-item [ngForOf]=\\\"model\\\" *ngIf=\\\"!hasSubMenu()\\\">\\n                    <li class=\\\"ui-menu-separator ui-widget-content\\\" *ngIf=\\\"item.separator\\\" [ngClass]=\\\"{'ui-helper-hidden': item.visible === false}\\\"></li>\\n                    <li class=\\\"ui-menuitem ui-widget ui-corner-all\\\" *ngIf=\\\"!item.separator\\\" [pMenuItemContent]=\\\"item\\\" [ngClass]=\\\"{'ui-helper-hidden': item.visible === false}\\\"></li>\\n                </ng-template>\\n            </ul>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler],\n  host: {\n    '(window:resize)': 'onResize($event)'\n  }\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2])], Menu);\nexports.Menu = Menu;\nvar MenuModule = function () {\n  function MenuModule() {}\n  return MenuModule;\n}();\nMenuModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, router_1.RouterModule],\n  exports: [Menu, router_1.RouterModule],\n  declarations: [Menu, MenuItemContent]\n})], MenuModule);\nexports.MenuModule = MenuModule;\n//# sourceMappingURL=menu.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}