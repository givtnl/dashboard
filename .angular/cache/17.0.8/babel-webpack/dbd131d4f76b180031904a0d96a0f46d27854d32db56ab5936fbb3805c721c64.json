{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar paginator_1 = require(\"../paginator/paginator\");\nvar DataList = function () {\n  function DataList(el, differs) {\n    this.el = el;\n    this.differs = differs;\n    this.pageLinks = 5;\n    this.onLazyLoad = new core_1.EventEmitter();\n    this.paginatorPosition = 'bottom';\n    this.emptyMessage = 'No records found';\n    this.alwaysShowPaginator = true;\n    this.trackBy = function (index, item) {\n      return item;\n    };\n    this.immutable = true;\n    this.onPage = new core_1.EventEmitter();\n    this.first = 0;\n    this.page = 0;\n    this.differ = differs.find([]).create(null);\n  }\n  DataList.prototype.ngAfterContentInit = function () {\n    var _this = this;\n    this.templates.forEach(function (item) {\n      switch (item.getType()) {\n        case 'item':\n          _this.itemTemplate = item.template;\n          break;\n        default:\n          _this.itemTemplate = item.template;\n          break;\n      }\n    });\n  };\n  DataList.prototype.ngAfterViewInit = function () {\n    if (this.lazy) {\n      this.onLazyLoad.emit({\n        first: this.first,\n        rows: this.rows\n      });\n    }\n  };\n  Object.defineProperty(DataList.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      this._value = val;\n      if (this.immutable) {\n        this.handleDataChange();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DataList.prototype.handleDataChange = function () {\n    if (this.paginator) {\n      this.updatePaginator();\n    }\n    this.updateDataToRender(this.value);\n  };\n  DataList.prototype.ngDoCheck = function () {\n    if (!this.immutable) {\n      var changes = this.differ.diff(this.value);\n      if (changes) {\n        this.handleDataChange();\n      }\n    }\n  };\n  DataList.prototype.updatePaginator = function () {\n    //total records\n    this.totalRecords = this.lazy ? this.totalRecords : this.value ? this.value.length : 0;\n    //first\n    if (this.totalRecords && this.first >= this.totalRecords) {\n      var numberOfPages = Math.ceil(this.totalRecords / this.rows);\n      this.first = Math.max((numberOfPages - 1) * this.rows, 0);\n    }\n  };\n  DataList.prototype.paginate = function (event) {\n    this.first = event.first;\n    this.rows = event.rows;\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.updateDataToRender(this.value);\n    }\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n  };\n  DataList.prototype.updateDataToRender = function (datasource) {\n    if (this.paginator && datasource) {\n      this.dataToRender = [];\n      var startIndex = this.lazy ? 0 : this.first;\n      for (var i = startIndex; i < startIndex + this.rows; i++) {\n        if (i >= datasource.length) {\n          break;\n        }\n        this.dataToRender.push(datasource[i]);\n      }\n    } else {\n      this.dataToRender = datasource;\n    }\n  };\n  DataList.prototype.isEmpty = function () {\n    return !this.dataToRender || this.dataToRender.length == 0;\n  };\n  DataList.prototype.createLazyLoadMetadata = function () {\n    return {\n      first: this.first,\n      rows: this.rows\n    };\n  };\n  DataList.prototype.getBlockableElement = function () {\n    return this.el.nativeElement.children[0];\n  };\n  return DataList;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataList.prototype, \"paginator\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], DataList.prototype, \"rows\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], DataList.prototype, \"totalRecords\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], DataList.prototype, \"pageLinks\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], DataList.prototype, \"rowsPerPageOptions\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataList.prototype, \"lazy\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], DataList.prototype, \"onLazyLoad\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], DataList.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], DataList.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], DataList.prototype, \"paginatorPosition\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], DataList.prototype, \"emptyMessage\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataList.prototype, \"alwaysShowPaginator\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Function)], DataList.prototype, \"trackBy\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataList.prototype, \"immutable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], DataList.prototype, \"scrollable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], DataList.prototype, \"scrollHeight\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], DataList.prototype, \"onPage\", void 0);\n__decorate([core_1.ContentChild(shared_1.Header), __metadata(\"design:type\", Object)], DataList.prototype, \"header\", void 0);\n__decorate([core_1.ContentChild(shared_1.Footer), __metadata(\"design:type\", Object)], DataList.prototype, \"footer\", void 0);\n__decorate([core_1.ContentChildren(shared_1.PrimeTemplate), __metadata(\"design:type\", core_1.QueryList)], DataList.prototype, \"templates\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DataList.prototype, \"value\", null);\nDataList = __decorate([core_1.Component({\n  selector: 'p-dataList',\n  template: \"\\n        <div [ngClass]=\\\"{'ui-datalist ui-widget': true, 'ui-datalist-scrollable': scrollable}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-datalist-header ui-widget-header ui-corner-top\\\" *ngIf=\\\"header\\\">\\n                <ng-content select=\\\"p-header\\\"></ng-content>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n            (onPageChange)=\\\"paginate($event)\\\" styleClass=\\\"ui-paginator-bottom\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator  && paginatorPosition!='bottom' || paginatorPosition =='both'\\\"></p-paginator>\\n            <div class=\\\"ui-datalist-content ui-widget-content\\\" [ngStyle]=\\\"{'max-height': scrollHeight}\\\">\\n                <div *ngIf=\\\"isEmpty()\\\" class=\\\"ui-datalist-emptymessage\\\">{{emptyMessage}}</div>\\n                <ul class=\\\"ui-datalist-data\\\">\\n                    <li *ngFor=\\\"let item of dataToRender;let i = index;trackBy: trackBy\\\">\\n                        <ng-template [pTemplateWrapper]=\\\"itemTemplate\\\" [item]=\\\"item\\\" [index]=\\\"i + first\\\"></ng-template>\\n                    </li>\\n                </ul>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n            (onPageChange)=\\\"paginate($event)\\\" styleClass=\\\"ui-paginator-bottom\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator  && paginatorPosition!='top' || paginatorPosition =='both'\\\"></p-paginator>\\n            <div class=\\\"ui-datalist-footer ui-widget-header ui-corner-bottom\\\" *ngIf=\\\"footer\\\">\\n                <ng-content select=\\\"p-footer\\\"></ng-content>\\n            </div>\\n        </div>\\n    \"\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.IterableDiffers])], DataList);\nexports.DataList = DataList;\nvar DataListModule = function () {\n  function DataListModule() {}\n  return DataListModule;\n}();\nDataListModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, shared_1.SharedModule, paginator_1.PaginatorModule],\n  exports: [DataList, shared_1.SharedModule],\n  declarations: [DataList]\n})], DataListModule);\nexports.DataListModule = DataListModule;\n//# sourceMappingURL=datalist.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}