{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { sprintf } from \"sprintf-js\";\nimport * as i0 from \"@angular/core\";\nexport class ISODatePipe extends DatePipe {\n  constructor() {\n    super(navigator.language.includes('nl') ? 'nl-NL' : 'en-GB');\n  }\n  toISODateUTC(value) {\n    return sprintf(\"%04i-%02i-%02iT%02i:%02i:%02i.%03i\", value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds()) + \"Z\";\n  }\n  getLocalTimeZoneISOString() {\n    let value = new Date();\n    let tzhours = value.getTimezoneOffset() / 60 * -1;\n    let negative = tzhours < 0;\n    tzhours = Math.abs(tzhours);\n    let tzminutes = value.getTimezoneOffset() % 60 * -1;\n    return sprintf(\"%s%02i:%02i\", negative ? \"-\" : \"+\", tzhours, tzminutes);\n  }\n  static #_ = this.ɵfac = function ISODatePipe_Factory(t) {\n    return new (t || ISODatePipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"isoDate\",\n    type: ISODatePipe,\n    pure: true\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}