{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar shared_1 = require(\"../common/shared\");\nvar common_1 = require(\"@angular/common\");\nvar Carousel = function () {\n  function Carousel(el, domHandler, renderer, cd) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.numVisible = 3;\n    this.firstVisible = 0;\n    this.circular = false;\n    this.breakpoint = 560;\n    this.responsive = true;\n    this.autoplayInterval = 0;\n    this.effectDuration = '1s';\n    this.easing = 'ease-out';\n    this.pageLinks = 3;\n    this.onPage = new core_1.EventEmitter();\n    this.left = 0;\n  }\n  Carousel.prototype.ngAfterContentInit = function () {\n    var _this = this;\n    this.templates.forEach(function (item) {\n      switch (item.getType()) {\n        case 'item':\n          _this.itemTemplate = item.template;\n          break;\n        default:\n          _this.itemTemplate = item.template;\n          break;\n      }\n    });\n  };\n  Object.defineProperty(Carousel.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (val) {\n      this._value = val;\n      this.handleDataChange();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Carousel.prototype.handleDataChange = function () {\n    if (this.value && this.value.length) {\n      if (this.value.length && this.firstVisible >= this.value.length) {\n        this.setPage(this.totalPages - 1);\n      }\n    } else {\n      this.setPage(0);\n    }\n    this.valuesChanged = true;\n  };\n  Carousel.prototype.ngAfterViewChecked = function () {\n    if (this.valuesChanged && this.containerViewChild.nativeElement.offsetParent) {\n      this.render();\n      this.valuesChanged = false;\n    }\n  };\n  Carousel.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    if (this.responsive) {\n      this.documentResponsiveListener = this.renderer.listen('window', 'resize', function (event) {\n        _this.updateState();\n      });\n    }\n  };\n  Carousel.prototype.updateLinks = function () {\n    this.anchorPageLinks = [];\n    for (var i = 0; i < this.totalPages; i++) {\n      this.anchorPageLinks.push(i);\n    }\n  };\n  Carousel.prototype.updateDropdown = function () {\n    this.selectDropdownOptions = [];\n    for (var i = 0; i < this.totalPages; i++) {\n      this.selectDropdownOptions.push(i);\n    }\n  };\n  Carousel.prototype.updateMobileDropdown = function () {\n    this.mobileDropdownOptions = [];\n    if (this.value && this.value.length) {\n      for (var i = 0; i < this.value.length; i++) {\n        this.mobileDropdownOptions.push(i);\n      }\n    }\n  };\n  Carousel.prototype.render = function () {\n    if (this.autoplayInterval) {\n      this.stopAutoplay();\n    }\n    this.items = this.domHandler.find(this.itemsViewChild.nativeElement, 'li');\n    this.calculateColumns();\n    this.calculateItemWidths();\n    if (!this.responsive) {\n      this.containerViewChild.nativeElement.style.width = this.domHandler.width(this.containerViewChild.nativeElement) + 'px';\n    }\n    if (this.autoplayInterval) {\n      this.circular = true;\n      this.startAutoplay();\n    }\n    this.updateMobileDropdown();\n    this.updateLinks();\n    this.updateDropdown();\n    this.cd.detectChanges();\n  };\n  Carousel.prototype.calculateItemWidths = function () {\n    var firstItem = this.items && this.items.length ? this.items[0] : null;\n    if (firstItem) {\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style.width = (this.domHandler.innerWidth(this.viewportViewChild.nativeElement) - this.domHandler.getHorizontalMargin(firstItem) * this.columns) / this.columns + 'px';\n      }\n    }\n  };\n  Carousel.prototype.calculateColumns = function () {\n    if (window.innerWidth <= this.breakpoint) {\n      this.shrinked = true;\n      this.columns = 1;\n    } else {\n      this.shrinked = false;\n      this.columns = this.numVisible;\n    }\n    this.page = Math.floor(this.firstVisible / this.columns);\n  };\n  Carousel.prototype.onNextNav = function () {\n    var lastPage = this.page === this.totalPages - 1;\n    if (!lastPage) this.setPage(this.page + 1);else if (this.circular) this.setPage(0);\n  };\n  Carousel.prototype.onPrevNav = function () {\n    if (this.page !== 0) this.setPage(this.page - 1);else if (this.circular) this.setPage(this.totalPages - 1);\n  };\n  Carousel.prototype.setPageWithLink = function (event, p) {\n    this.setPage(p);\n    event.preventDefault();\n  };\n  Carousel.prototype.setPage = function (p, enforce) {\n    if (p !== this.page || enforce) {\n      this.page = p;\n      this.left = -1 * (this.domHandler.innerWidth(this.viewportViewChild.nativeElement) * this.page);\n      this.firstVisible = this.page * this.columns;\n      this.onPage.emit({\n        page: this.page\n      });\n    }\n  };\n  Carousel.prototype.onDropdownChange = function (val) {\n    this.setPage(parseInt(val));\n  };\n  Object.defineProperty(Carousel.prototype, \"displayPageLinks\", {\n    get: function () {\n      return this.totalPages <= this.pageLinks && !this.shrinked;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Carousel.prototype, \"displayPageDropdown\", {\n    get: function () {\n      return this.totalPages > this.pageLinks && !this.shrinked;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Carousel.prototype, \"totalPages\", {\n    get: function () {\n      return this.value && this.value.length ? Math.ceil(this.value.length / this.columns) : 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Carousel.prototype.routerDisplay = function () {\n    var win = window;\n    if (win.innerWidth <= this.breakpoint) return true;else return false;\n  };\n  Carousel.prototype.updateState = function () {\n    var win = window;\n    if (win.innerWidth <= this.breakpoint) {\n      this.shrinked = true;\n      this.columns = 1;\n    } else if (this.shrinked) {\n      this.shrinked = false;\n      this.columns = this.numVisible;\n      this.updateLinks();\n      this.updateDropdown();\n    }\n    this.calculateItemWidths();\n    this.setPage(Math.floor(this.firstVisible / this.columns), true);\n  };\n  Carousel.prototype.startAutoplay = function () {\n    var _this = this;\n    this.interval = setInterval(function () {\n      if (_this.page === _this.totalPages - 1) _this.setPage(0);else _this.setPage(_this.page + 1);\n    }, this.autoplayInterval);\n  };\n  Carousel.prototype.stopAutoplay = function () {\n    clearInterval(this.interval);\n  };\n  Carousel.prototype.ngOnDestroy = function () {\n    if (this.documentResponsiveListener) {\n      this.documentResponsiveListener();\n    }\n    if (this.autoplayInterval) {\n      this.stopAutoplay();\n    }\n  };\n  return Carousel;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Carousel.prototype, \"numVisible\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Carousel.prototype, \"firstVisible\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Carousel.prototype, \"headerText\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Carousel.prototype, \"circular\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Carousel.prototype, \"breakpoint\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Carousel.prototype, \"responsive\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Carousel.prototype, \"autoplayInterval\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Carousel.prototype, \"effectDuration\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Carousel.prototype, \"easing\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], Carousel.prototype, \"pageLinks\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Carousel.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Carousel.prototype, \"styleClass\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Carousel.prototype, \"onPage\", void 0);\n__decorate([core_1.ContentChildren(shared_1.PrimeTemplate), __metadata(\"design:type\", core_1.QueryList)], Carousel.prototype, \"templates\", void 0);\n__decorate([core_1.ViewChild('container'), __metadata(\"design:type\", core_1.ElementRef)], Carousel.prototype, \"containerViewChild\", void 0);\n__decorate([core_1.ViewChild('viewport'), __metadata(\"design:type\", core_1.ElementRef)], Carousel.prototype, \"viewportViewChild\", void 0);\n__decorate([core_1.ViewChild('items'), __metadata(\"design:type\", core_1.ElementRef)], Carousel.prototype, \"itemsViewChild\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], Carousel.prototype, \"value\", null);\nCarousel = __decorate([core_1.Component({\n  selector: 'p-carousel',\n  template: \"\\n        <div #container [ngClass]=\\\"{'ui-carousel ui-widget ui-widget-content ui-corner-all':true}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-carousel-header ui-widget-header ui-corner-all\\\">\\n                <span class=\\\"ui-carousel-header-title\\\">{{headerText}}</span>\\n                <span class=\\\"ui-carousel-button ui-carousel-next-button fa fa-arrow-circle-right\\\" (click)=\\\"onNextNav()\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':(page === (totalPages-1)) && !circular}\\\" *ngIf=\\\"value&&value.length\\\"></span>\\n                <span class=\\\"ui-carousel-button ui-carousel-prev-button fa fa-arrow-circle-left\\\" (click)=\\\"onPrevNav()\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':(page === 0 && !circular)}\\\" *ngIf=\\\"value&&value.length\\\"></span>\\n                <div *ngIf=\\\"displayPageLinks\\\" class=\\\"ui-carousel-page-links\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"setPageWithLink($event,i)\\\" class=\\\"ui-carousel-page-link fa fa-circle-o\\\" *ngFor=\\\"let links of anchorPageLinks;let i=index\\\" [ngClass]=\\\"{'fa-dot-circle-o':page===i}\\\"></a>\\n                </div>\\n                <select *ngIf=\\\"displayPageDropdown\\\" class=\\\"ui-carousel-dropdown ui-widget ui-state-default ui-corner-left\\\" [value]=\\\"page\\\" (change)=\\\"onDropdownChange($event.target.value)\\\">\\n                    <option *ngFor=\\\"let option of selectDropdownOptions\\\" [value]=\\\"option\\\" [selected]=\\\"value == option\\\">{{option+1}}</option>\\n                </select>\\n                <select *ngIf=\\\"responsive&&value&&value.length\\\" class=\\\"ui-carousel-mobiledropdown ui-widget ui-state-default ui-corner-left\\\" [value]=\\\"page\\\" (change)=\\\"onDropdownChange($event.target.value)\\\"\\n                    [style.display]=\\\"shrinked ? 'block' : 'none'\\\">\\n                    <option *ngFor=\\\"let option of mobileDropdownOptions\\\" [value]=\\\"option\\\" [selected]=\\\"value == option\\\">{{option+1}}</option>\\n                </select>\\n            </div>\\n            <div #viewport class=\\\"ui-carousel-viewport\\\">\\n                <ul #items class=\\\"ui-carousel-items\\\" [style.left.px]=\\\"left\\\" [style.transitionProperty]=\\\"'left'\\\" \\n                            [style.transitionDuration]=\\\"effectDuration\\\" [style.transitionTimingFunction]=\\\"easing\\\">\\n                    <li *ngFor=\\\"let item of value\\\" class=\\\"ui-carousel-item ui-widget-content ui-corner-all\\\">\\n                        <ng-template [pTemplateWrapper]=\\\"itemTemplate\\\" [item]=\\\"item\\\"></ng-template>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, core_1.ChangeDetectorRef])], Carousel);\nexports.Carousel = Carousel;\nvar CarouselModule = function () {\n  function CarouselModule() {}\n  return CarouselModule;\n}();\nCarouselModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, shared_1.SharedModule],\n  exports: [Carousel, shared_1.SharedModule],\n  declarations: [Carousel]\n})], CarouselModule);\nexports.CarouselModule = CarouselModule;\n//# sourceMappingURL=carousel.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}