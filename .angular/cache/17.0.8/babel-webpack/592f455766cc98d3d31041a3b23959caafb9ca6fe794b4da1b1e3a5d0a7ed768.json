{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar button_1 = require(\"../button/button\");\nvar InplaceDisplay = function () {\n  function InplaceDisplay() {}\n  return InplaceDisplay;\n}();\nInplaceDisplay = __decorate([core_1.Component({\n  selector: 'p-inplaceDisplay',\n  template: '<ng-content></ng-content>'\n})], InplaceDisplay);\nexports.InplaceDisplay = InplaceDisplay;\nvar InplaceContent = function () {\n  function InplaceContent() {}\n  return InplaceContent;\n}();\nInplaceContent = __decorate([core_1.Component({\n  selector: 'p-inplaceContent',\n  template: '<ng-content></ng-content>'\n})], InplaceContent);\nexports.InplaceContent = InplaceContent;\nvar Inplace = function () {\n  function Inplace() {\n    this.onActivate = new core_1.EventEmitter();\n    this.onDeactivate = new core_1.EventEmitter();\n  }\n  Inplace.prototype.activate = function (event) {\n    if (!this.disabled) {\n      this.active = true;\n      this.onActivate.emit(event);\n    }\n  };\n  Inplace.prototype.deactivate = function (event) {\n    if (!this.disabled) {\n      this.active = false;\n      this.hover = false;\n      this.onDeactivate.emit(event);\n    }\n  };\n  return Inplace;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Inplace.prototype, \"active\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Inplace.prototype, \"closable\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], Inplace.prototype, \"disabled\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Inplace.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Inplace.prototype, \"styleClass\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Inplace.prototype, \"onActivate\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], Inplace.prototype, \"onDeactivate\", void 0);\nInplace = __decorate([core_1.Component({\n  selector: 'p-inplace',\n  template: \"\\n        <div [ngClass]=\\\"'ui-inplace ui-widget'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-inplace-display\\\" (click)=\\\"activate($event)\\\"\\n                [ngClass]=\\\"{'ui-state-disabled':disabled}\\\" *ngIf=\\\"!active\\\">\\n                <ng-content select=\\\"[pInplaceDisplay]\\\"></ng-content>\\n            </div>\\n            <div class=\\\"ui-inplace-content\\\" *ngIf=\\\"active\\\">\\n                <ng-content select=\\\"[pInplaceContent]\\\"></ng-content>\\n                <button type=\\\"button\\\" icon=\\\"fa-close\\\" pButton (click)=\\\"deactivate($event)\\\" *ngIf=\\\"closable\\\"></button>\\n            </div>\\n        </div>\\n    \"\n})], Inplace);\nexports.Inplace = Inplace;\nvar InplaceModule = function () {\n  function InplaceModule() {}\n  return InplaceModule;\n}();\nInplaceModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, button_1.ButtonModule],\n  exports: [Inplace, InplaceDisplay, InplaceContent, button_1.ButtonModule],\n  declarations: [Inplace, InplaceDisplay, InplaceContent]\n})], InplaceModule);\nexports.InplaceModule = InplaceModule;\n//# sourceMappingURL=inplace.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}