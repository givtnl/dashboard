{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.RADIO_VALUE_ACCESSOR = {\n  provide: forms_1.NG_VALUE_ACCESSOR,\n  useExisting: core_1.forwardRef(function () {\n    return RadioButton;\n  }),\n  multi: true\n};\nvar RadioButton = function () {\n  function RadioButton(cd) {\n    this.cd = cd;\n    this.onClick = new core_1.EventEmitter();\n    this.onModelChange = function () {};\n    this.onModelTouched = function () {};\n  }\n  RadioButton.prototype.handleClick = function () {\n    if (!this.disabled) {\n      this.select();\n    }\n  };\n  RadioButton.prototype.select = function () {\n    if (!this.disabled) {\n      this.onClick.emit(null);\n      this.inputViewChild.nativeElement.checked = true;\n      this.checked = true;\n      this.onModelChange(this.value);\n    }\n  };\n  RadioButton.prototype.writeValue = function (value) {\n    this.checked = value == this.value;\n    if (this.inputViewChild.nativeElement) {\n      this.inputViewChild.nativeElement.checked = this.checked;\n    }\n    this.cd.markForCheck();\n  };\n  RadioButton.prototype.registerOnChange = function (fn) {\n    this.onModelChange = fn;\n  };\n  RadioButton.prototype.registerOnTouched = function (fn) {\n    this.onModelTouched = fn;\n  };\n  RadioButton.prototype.setDisabledState = function (val) {\n    this.disabled = val;\n  };\n  RadioButton.prototype.onFocus = function (event) {\n    this.focused = true;\n  };\n  RadioButton.prototype.onBlur = function (event) {\n    this.focused = false;\n    this.onModelTouched();\n  };\n  RadioButton.prototype.onChange = function (event) {\n    this.select();\n  };\n  return RadioButton;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], RadioButton.prototype, \"value\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], RadioButton.prototype, \"name\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], RadioButton.prototype, \"disabled\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], RadioButton.prototype, \"label\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], RadioButton.prototype, \"tabindex\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], RadioButton.prototype, \"inputId\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], RadioButton.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], RadioButton.prototype, \"styleClass\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], RadioButton.prototype, \"onClick\", void 0);\n__decorate([core_1.ViewChild('rb'), __metadata(\"design:type\", core_1.ElementRef)], RadioButton.prototype, \"inputViewChild\", void 0);\nRadioButton = __decorate([core_1.Component({\n  selector: 'p-radioButton',\n  template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-radiobutton ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #rb type=\\\"radio\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.value]=\\\"value\\\" [attr.tabindex]=\\\"tabindex\\\" \\n                    [checked]=\\\"checked\\\" (change)=\\\"onChange($event)\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\">\\n            </div>\\n            <div (click)=\\\"handleClick()\\\"\\n                [ngClass]=\\\"{'ui-radiobutton-box ui-widget ui-state-default':true,\\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-radiobutton-icon ui-clickable\\\" [ngClass]=\\\"{'fa fa-circle':rb.checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label class=\\\"ui-radiobutton-label\\\" (click)=\\\"select()\\\" \\n            [ngClass]=\\\"{'ui-label-active':rb.checked,'ui-label-disabled':disabled,'ui-label-focus':focused}\\\"\\n            *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n  providers: [exports.RADIO_VALUE_ACCESSOR]\n}), __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])], RadioButton);\nexports.RadioButton = RadioButton;\nvar RadioButtonModule = function () {\n  function RadioButtonModule() {}\n  return RadioButtonModule;\n}();\nRadioButtonModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [RadioButton],\n  declarations: [RadioButton]\n})], RadioButtonModule);\nexports.RadioButtonModule = RadioButtonModule;\n//# sourceMappingURL=radiobutton.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}