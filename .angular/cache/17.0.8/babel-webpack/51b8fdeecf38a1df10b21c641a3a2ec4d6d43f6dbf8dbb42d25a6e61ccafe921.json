{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar DeferredLoader = function () {\n  function DeferredLoader(el, domHandler, renderer, viewContainer) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.renderer = renderer;\n    this.viewContainer = viewContainer;\n    this.onLoad = new core_1.EventEmitter();\n  }\n  DeferredLoader.prototype.ngAfterViewInit = function () {\n    var _this = this;\n    if (this.shouldLoad()) {\n      this.load();\n    }\n    this.documentScrollListener = this.renderer.listen('window', 'scroll', function () {\n      if (_this.shouldLoad()) {\n        _this.load();\n        _this.documentScrollListener();\n        _this.documentScrollListener = null;\n      }\n    });\n  };\n  DeferredLoader.prototype.shouldLoad = function () {\n    var rect = this.el.nativeElement.getBoundingClientRect();\n    var docElement = document.documentElement;\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    var winHeight = docElement.clientHeight;\n    return winHeight >= rect.top;\n  };\n  DeferredLoader.prototype.load = function () {\n    this.view = this.viewContainer.createEmbeddedView(this.template);\n    this.onLoad.emit();\n  };\n  DeferredLoader.prototype.ngOnDestroy = function () {\n    this.view = null;\n    if (this.documentScrollListener) {\n      this.documentScrollListener();\n    }\n  };\n  return DeferredLoader;\n}();\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], DeferredLoader.prototype, \"onLoad\", void 0);\n__decorate([core_1.ContentChild(core_1.TemplateRef), __metadata(\"design:type\", core_1.TemplateRef)], DeferredLoader.prototype, \"template\", void 0);\nDeferredLoader = __decorate([core_1.Directive({\n  selector: '[pDefer]',\n  host: {},\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2, core_1.ViewContainerRef])], DeferredLoader);\nexports.DeferredLoader = DeferredLoader;\nvar DeferModule = function () {\n  function DeferModule() {}\n  return DeferModule;\n}();\nDeferModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [DeferredLoader],\n  declarations: [DeferredLoader]\n})], DeferModule);\nexports.DeferModule = DeferModule;\n//# sourceMappingURL=defer.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}