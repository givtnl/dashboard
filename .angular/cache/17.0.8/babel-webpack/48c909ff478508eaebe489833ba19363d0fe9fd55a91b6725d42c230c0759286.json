{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.TRISTATECHECKBOX_VALUE_ACCESSOR = {\n  provide: forms_1.NG_VALUE_ACCESSOR,\n  useExisting: core_1.forwardRef(function () {\n    return TriStateCheckbox;\n  }),\n  multi: true\n};\nvar TriStateCheckbox = function () {\n  function TriStateCheckbox(cd) {\n    this.cd = cd;\n    this.onChange = new core_1.EventEmitter();\n    this.onModelChange = function () {};\n    this.onModelTouched = function () {};\n  }\n  TriStateCheckbox.prototype.onClick = function (event, input) {\n    if (!this.disabled) {\n      this.toggle(event);\n      this.focus = true;\n      input.focus();\n    }\n  };\n  TriStateCheckbox.prototype.onKeydown = function (event) {\n    if (event.keyCode == 32) {\n      event.preventDefault();\n    }\n  };\n  TriStateCheckbox.prototype.onKeyup = function (event) {\n    if (event.keyCode == 32) {\n      this.toggle(event);\n      event.preventDefault();\n    }\n  };\n  TriStateCheckbox.prototype.toggle = function (event) {\n    if (this.value == null || this.value == undefined) this.value = true;else if (this.value == true) this.value = false;else if (this.value == false) this.value = null;\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n  };\n  TriStateCheckbox.prototype.onFocus = function () {\n    this.focus = true;\n  };\n  TriStateCheckbox.prototype.onBlur = function () {\n    this.focus = false;\n    this.onModelTouched();\n  };\n  TriStateCheckbox.prototype.registerOnChange = function (fn) {\n    this.onModelChange = fn;\n  };\n  TriStateCheckbox.prototype.registerOnTouched = function (fn) {\n    this.onModelTouched = fn;\n  };\n  TriStateCheckbox.prototype.writeValue = function (value) {\n    this.value = value;\n    this.cd.markForCheck();\n  };\n  TriStateCheckbox.prototype.setDisabledState = function (disabled) {\n    this.disabled = disabled;\n  };\n  return TriStateCheckbox;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], TriStateCheckbox.prototype, \"disabled\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], TriStateCheckbox.prototype, \"name\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Number)], TriStateCheckbox.prototype, \"tabindex\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], TriStateCheckbox.prototype, \"inputId\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], TriStateCheckbox.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], TriStateCheckbox.prototype, \"styleClass\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], TriStateCheckbox.prototype, \"onChange\", void 0);\nTriStateCheckbox = __decorate([core_1.Component({\n  selector: 'p-triStateCheckbox',\n  template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-chkbox ui-tristatechkbox ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #input type=\\\"text\\\" [attr.id]=\\\"inputId\\\" [name]=\\\"name\\\" [attr.tabindex]=\\\"tabindex\\\" readonly [disabled]=\\\"disabled\\\" (keyup)=\\\"onKeyup($event)\\\" (keydown)=\\\"onKeydown($event)\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\">\\n            </div>\\n            <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" (click)=\\\"onClick($event,input)\\\"\\n                [ngClass]=\\\"{'ui-state-active':value!=null,'ui-state-disabled':disabled,'ui-state-focus':focus}\\\">\\n                <span class=\\\"ui-chkbox-icon fa ui-clickable\\\" [ngClass]=\\\"{'fa-check':value==true,'fa-close':value==false}\\\"></span>\\n            </div>\\n        </div>\\n    \",\n  providers: [exports.TRISTATECHECKBOX_VALUE_ACCESSOR]\n}), __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])], TriStateCheckbox);\nexports.TriStateCheckbox = TriStateCheckbox;\nvar TriStateCheckboxModule = function () {\n  function TriStateCheckboxModule() {}\n  return TriStateCheckboxModule;\n}();\nTriStateCheckboxModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [TriStateCheckbox],\n  declarations: [TriStateCheckbox]\n})], TriStateCheckboxModule);\nexports.TriStateCheckboxModule = TriStateCheckboxModule;\n//# sourceMappingURL=tristatecheckbox.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}