{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar terminalservice_1 = require(\"./terminalservice\");\nvar Terminal = function () {\n  function Terminal(el, domHandler, terminalService) {\n    var _this = this;\n    this.el = el;\n    this.domHandler = domHandler;\n    this.terminalService = terminalService;\n    this.commands = [];\n    this.subscription = terminalService.responseHandler.subscribe(function (response) {\n      _this.commands[_this.commands.length - 1].response = response;\n      _this.commandProcessed = true;\n    });\n  }\n  Terminal.prototype.ngAfterViewInit = function () {\n    this.container = this.domHandler.find(this.el.nativeElement, '.ui-terminal')[0];\n  };\n  Terminal.prototype.ngAfterViewChecked = function () {\n    if (this.commandProcessed) {\n      this.container.scrollTop = this.container.scrollHeight;\n      this.commandProcessed = false;\n    }\n  };\n  Object.defineProperty(Terminal.prototype, \"response\", {\n    set: function (value) {\n      if (value) {\n        this.commands[this.commands.length - 1].response = value;\n        this.commandProcessed = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Terminal.prototype.handleCommand = function (event) {\n    if (event.keyCode == 13) {\n      this.commands.push({\n        text: this.command\n      });\n      this.terminalService.sendCommand(this.command);\n      this.command = '';\n    }\n  };\n  Terminal.prototype.focus = function (element) {\n    element.focus();\n  };\n  Terminal.prototype.ngOnDestroy = function () {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  };\n  return Terminal;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Terminal.prototype, \"welcomeMessage\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Terminal.prototype, \"prompt\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Terminal.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Terminal.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], Terminal.prototype, \"response\", null);\nTerminal = __decorate([core_1.Component({\n  selector: 'p-terminal',\n  template: \"\\n        <div [ngClass]=\\\"'ui-terminal ui-widget ui-widget-content ui-corner-all'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"focus(in)\\\">\\n            <div *ngIf=\\\"welcomeMessage\\\">{{welcomeMessage}}</div>\\n            <div class=\\\"ui-terminal-content\\\">\\n                <div *ngFor=\\\"let command of commands\\\">\\n                    <span>{{prompt}}</span>\\n                    <span class=\\\"ui-terminal-command\\\">{{command.text}}</span>\\n                    <div>{{command.response}}</div>\\n                </div>\\n            </div>\\n            <div>\\n                <span class=\\\"ui-terminal-content-prompt\\\">{{prompt}}</span>\\n                <input #in type=\\\"text\\\" [(ngModel)]=\\\"command\\\" class=\\\"ui-terminal-input\\\" autocomplete=\\\"off\\\" (keydown)=\\\"handleCommand($event)\\\" autofocus>\\n            </div>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, terminalservice_1.TerminalService])], Terminal);\nexports.Terminal = Terminal;\nvar TerminalModule = function () {\n  function TerminalModule() {}\n  return TerminalModule;\n}();\nTerminalModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, forms_1.FormsModule],\n  exports: [Terminal],\n  declarations: [Terminal]\n})], TerminalModule);\nexports.TerminalModule = TerminalModule;\n//# sourceMappingURL=terminal.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}