{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar UIChart = function () {\n  function UIChart(el) {\n    this.el = el;\n    this.onDataSelect = new core_1.EventEmitter();\n  }\n  Object.defineProperty(UIChart.prototype, \"data\", {\n    get: function () {\n      return this._data;\n    },\n    set: function (val) {\n      this._data = val;\n      this.reinit();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  UIChart.prototype.ngAfterViewInit = function () {\n    this.initChart();\n    this.initialized = true;\n  };\n  UIChart.prototype.onCanvasClick = function (event) {\n    if (this.chart) {\n      var element = this.chart.getElementAtEvent(event);\n      var dataset = this.chart.getDatasetAtEvent(event);\n      if (element && element[0] && dataset) {\n        this.onDataSelect.emit({\n          originalEvent: event,\n          element: element[0],\n          dataset: dataset\n        });\n      }\n    }\n  };\n  UIChart.prototype.initChart = function () {\n    this.chart = new Chart(this.el.nativeElement.children[0].children[0], {\n      type: this.type,\n      data: this.data,\n      options: this.options\n    });\n  };\n  UIChart.prototype.getCanvas = function () {\n    return this.el.nativeElement.children[0].children[0];\n  };\n  UIChart.prototype.getBase64Image = function () {\n    return this.chart.toBase64Image();\n  };\n  UIChart.prototype.generateLegend = function () {\n    if (this.chart) {\n      this.chart.generateLegend();\n    }\n  };\n  UIChart.prototype.refresh = function () {\n    if (this.chart) {\n      this.chart.update();\n    }\n  };\n  UIChart.prototype.reinit = function () {\n    if (this.chart) {\n      this.chart.destroy();\n      this.initChart();\n    }\n  };\n  UIChart.prototype.ngOnDestroy = function () {\n    if (this.chart) {\n      this.chart.destroy();\n      this.initialized = false;\n      this.chart = null;\n    }\n  };\n  return UIChart;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], UIChart.prototype, \"type\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], UIChart.prototype, \"options\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], UIChart.prototype, \"width\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], UIChart.prototype, \"height\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], UIChart.prototype, \"onDataSelect\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], UIChart.prototype, \"data\", null);\nUIChart = __decorate([core_1.Component({\n  selector: 'p-chart',\n  template: \"\\n        <div>\\n            <canvas [attr.width]=\\\"width\\\" [attr.height]=\\\"height\\\" (click)=\\\"onCanvasClick($event)\\\"></canvas>\\n        </div>\\n    \"\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef])], UIChart);\nexports.UIChart = UIChart;\nvar ChartModule = function () {\n  function ChartModule() {}\n  return ChartModule;\n}();\nChartModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [UIChart],\n  declarations: [UIChart]\n})], ChartModule);\nexports.ChartModule = ChartModule;\n//# sourceMappingURL=chart.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}