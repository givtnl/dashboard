{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar animations_1 = require(\"@angular/animations\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar shared_1 = require(\"../common/shared\");\nvar shared_2 = require(\"../common/shared\");\nvar OrganizationChartNodeTemplateLoader = function () {\n  function OrganizationChartNodeTemplateLoader(viewContainer) {\n    this.viewContainer = viewContainer;\n  }\n  OrganizationChartNodeTemplateLoader.prototype.ngOnInit = function () {\n    this.view = this.viewContainer.createEmbeddedView(this.template, {\n      '\\$implicit': this.node\n    });\n  };\n  OrganizationChartNodeTemplateLoader.prototype.ngOnDestroy = function () {\n    this.view.destroy();\n  };\n  return OrganizationChartNodeTemplateLoader;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrganizationChartNodeTemplateLoader.prototype, \"node\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", core_1.TemplateRef)], OrganizationChartNodeTemplateLoader.prototype, \"template\", void 0);\nOrganizationChartNodeTemplateLoader = __decorate([core_1.Component({\n  selector: 'p-organizationChartNodeTemplateLoader',\n  template: \"\"\n}), __metadata(\"design:paramtypes\", [core_1.ViewContainerRef])], OrganizationChartNodeTemplateLoader);\nexports.OrganizationChartNodeTemplateLoader = OrganizationChartNodeTemplateLoader;\nvar OrganizationChartNode = function () {\n  function OrganizationChartNode(chart) {\n    this.chart = chart;\n  }\n  Object.defineProperty(OrganizationChartNode.prototype, \"leaf\", {\n    get: function () {\n      return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OrganizationChartNode.prototype, \"colspan\", {\n    get: function () {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  OrganizationChartNode.prototype.onNodeClick = function (event, node) {\n    this.chart.onNodeClick(event, node);\n  };\n  OrganizationChartNode.prototype.toggleNode = function (event, node) {\n    node.expanded = !node.expanded;\n    event.preventDefault();\n  };\n  OrganizationChartNode.prototype.isSelected = function () {\n    return this.chart.isSelected(this.node);\n  };\n  return OrganizationChartNode;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrganizationChartNode.prototype, \"node\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrganizationChartNode.prototype, \"root\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrganizationChartNode.prototype, \"first\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], OrganizationChartNode.prototype, \"last\", void 0);\nOrganizationChartNode = __decorate([core_1.Component({\n  selector: '[pOrganizationChartNode]',\n  template: \"\\n        <tr *ngIf=\\\"node\\\">\\n            <td [attr.colspan]=\\\"colspan\\\">\\n                <div class=\\\"ui-organizationchart-node-content ui-widget-content ui-corner-all {{node.styleClass}}\\\" \\n                    [ngClass]=\\\"{'ui-organizationchart-selectable-node': chart.selectionMode && node.selectable !== false,'ui-state-highlight':isSelected()}\\\"\\n                    (click)=\\\"onNodeClick($event,node)\\\">\\n                    <div *ngIf=\\\"!chart.getTemplateForNode(node)\\\">{{node.label}}</div>\\n                    <div *ngIf=\\\"chart.getTemplateForNode(node)\\\">\\n                        <p-organizationChartNodeTemplateLoader [node]=\\\"node\\\" [template]=\\\"chart.getTemplateForNode(node)\\\"></p-organizationChartNodeTemplateLoader>\\n                    </div>\\n                    <a *ngIf=\\\"!leaf\\\" href=\\\"#\\\" class=\\\"ui-node-toggler\\\" (click)=\\\"toggleNode($event, node)\\\">\\n                        <i class=\\\"fa ui-node-toggler-icon\\\" [ngClass]=\\\"{'fa-chevron-down': node.expanded, 'fa-chevron-up': !node.expanded}\\\"></i>\\n                    </a>\\n                </div>\\n            </td>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-lines\\\" [@childState]=\\\"'in'\\\">\\n            <td [attr.colspan]=\\\"colspan\\\">\\n                <div class=\\\"ui-organizationchart-line-down\\\"></div>\\n            </td>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-lines\\\" [@childState]=\\\"'in'\\\">\\n            <ng-template ngFor let-child [ngForOf]=\\\"node.children\\\" let-first=\\\"first\\\" let-last=\\\"last\\\">\\n                <td class=\\\"ui-organizationchart-line-left\\\" [ngClass]=\\\"{'ui-organizationchart-line-top':!first}\\\">&nbsp;</td>\\n                <td class=\\\"ui-organizationchart-line-right\\\" [ngClass]=\\\"{'ui-organizationchart-line-top':!last}\\\">&nbsp;</td>\\n            </ng-template>\\n        </tr>\\n        <tr [style.visibility]=\\\"!leaf&&node.expanded ? 'inherit' : 'hidden'\\\" class=\\\"ui-organizationchart-nodes\\\" [@childState]=\\\"'in'\\\">\\n            <td *ngFor=\\\"let child of node.children\\\" colspan=\\\"2\\\">\\n                <table class=\\\"ui-organizationchart-table\\\" pOrganizationChartNode [node]=\\\"child\\\"></table>\\n            </td>\\n        </tr>\\n    \",\n  animations: [animations_1.trigger('childState', [animations_1.state('in', animations_1.style({\n    opacity: 1\n  })), animations_1.transition('void => *', [animations_1.style({\n    opacity: 0\n  }), animations_1.animate(150)]), animations_1.transition('* => void', [animations_1.animate(150, animations_1.style({\n    opacity: 0\n  }))])])]\n}), __param(0, core_1.Inject(core_1.forwardRef(function () {\n  return OrganizationChart;\n}))), __metadata(\"design:paramtypes\", [OrganizationChart])], OrganizationChartNode);\nexports.OrganizationChartNode = OrganizationChartNode;\nvar OrganizationChart = function () {\n  function OrganizationChart(el, domHandler) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.selectionChange = new core_1.EventEmitter();\n    this.onNodeSelect = new core_1.EventEmitter();\n    this.onNodeUnselect = new core_1.EventEmitter();\n  }\n  Object.defineProperty(OrganizationChart.prototype, \"root\", {\n    get: function () {\n      return this.value && this.value.length ? this.value[0] : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  OrganizationChart.prototype.ngAfterContentInit = function () {\n    var _this = this;\n    if (this.templates.length) {\n      this.templateMap = {};\n    }\n    this.templates.forEach(function (item) {\n      _this.templateMap[item.getType()] = item.template;\n    });\n  };\n  OrganizationChart.prototype.getTemplateForNode = function (node) {\n    if (this.templateMap) return node.type ? this.templateMap[node.type] : this.templateMap['default'];else return null;\n  };\n  OrganizationChart.prototype.onNodeClick = function (event, node) {\n    var eventTarget = event.target;\n    if (eventTarget.className && (eventTarget.className.indexOf('ui-node-toggler') !== -1 || eventTarget.className.indexOf('ui-node-toggler-icon') !== -1)) {\n      return;\n    } else if (this.selectionMode) {\n      if (node.selectable === false) {\n        return;\n      }\n      var index_1 = this.findIndexInSelection(node);\n      var selected = index_1 >= 0;\n      if (this.selectionMode === 'single') {\n        if (selected) {\n          this.selection = null;\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = node;\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      } else if (this.selectionMode === 'multiple') {\n        if (selected) {\n          this.selection = this.selection.filter(function (val, i) {\n            return i != index_1;\n          });\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = (this.selection || []).concat([node]);\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      }\n      this.selectionChange.emit(this.selection);\n    }\n  };\n  OrganizationChart.prototype.findIndexInSelection = function (node) {\n    var index = -1;\n    if (this.selectionMode && this.selection) {\n      if (this.selectionMode === 'single') {\n        index = this.selection == node ? 0 : -1;\n      } else if (this.selectionMode === 'multiple') {\n        for (var i = 0; i < this.selection.length; i++) {\n          if (this.selection[i] == node) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n    return index;\n  };\n  OrganizationChart.prototype.isSelected = function (node) {\n    return this.findIndexInSelection(node) != -1;\n  };\n  return OrganizationChart;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], OrganizationChart.prototype, \"value\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrganizationChart.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrganizationChart.prototype, \"styleClass\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], OrganizationChart.prototype, \"selectionMode\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], OrganizationChart.prototype, \"selection\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrganizationChart.prototype, \"selectionChange\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrganizationChart.prototype, \"onNodeSelect\", void 0);\n__decorate([core_1.Output(), __metadata(\"design:type\", core_1.EventEmitter)], OrganizationChart.prototype, \"onNodeUnselect\", void 0);\n__decorate([core_1.ContentChildren(shared_2.PrimeTemplate), __metadata(\"design:type\", core_1.QueryList)], OrganizationChart.prototype, \"templates\", void 0);\nOrganizationChart = __decorate([core_1.Component({\n  selector: 'p-organizationChart',\n  template: \"\\n        <div [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" [ngClass]=\\\"'ui-organizationchart ui-widget'\\\">\\n            <table class=\\\"ui-organizationchart-table\\\" pOrganizationChartNode [node]=\\\"root\\\" *ngIf=\\\"root\\\"></table>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler])], OrganizationChart);\nexports.OrganizationChart = OrganizationChart;\nvar OrganizationChartModule = function () {\n  function OrganizationChartModule() {}\n  return OrganizationChartModule;\n}();\nOrganizationChartModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule],\n  exports: [OrganizationChart, shared_1.SharedModule],\n  declarations: [OrganizationChart, OrganizationChartNode, OrganizationChartNodeTemplateLoader]\n})], OrganizationChartModule);\nexports.OrganizationChartModule = OrganizationChartModule;\n//# sourceMappingURL=organizationchart.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}