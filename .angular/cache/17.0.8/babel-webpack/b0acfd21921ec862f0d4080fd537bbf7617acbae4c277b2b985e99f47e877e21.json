{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar router_1 = require(\"@angular/router\");\nvar MenubarSub = function () {\n  function MenubarSub(domHandler) {\n    this.domHandler = domHandler;\n  }\n  MenubarSub.prototype.onItemMouseEnter = function (event, item, menuitem) {\n    if (menuitem.disabled) {\n      return;\n    }\n    this.activeItem = item;\n    var nextElement = item.children[0].nextElementSibling;\n    if (nextElement) {\n      var sublist = nextElement.children[0];\n      sublist.style.zIndex = String(++domhandler_1.DomHandler.zindex);\n      if (this.root) {\n        sublist.style.top = this.domHandler.getOuterHeight(item.children[0]) + 'px';\n        sublist.style.left = '0px';\n      } else {\n        sublist.style.top = '0px';\n        sublist.style.left = this.domHandler.getOuterWidth(item.children[0]) + 'px';\n      }\n    }\n  };\n  MenubarSub.prototype.onItemMouseLeave = function (event) {\n    this.activeItem = null;\n  };\n  MenubarSub.prototype.itemClick = function (event, item) {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!item.url) {\n      event.preventDefault();\n    }\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item: item\n      });\n    }\n    this.activeItem = null;\n  };\n  MenubarSub.prototype.listClick = function (event) {\n    this.activeItem = null;\n  };\n  return MenubarSub;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], MenubarSub.prototype, \"item\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Boolean)], MenubarSub.prototype, \"root\", void 0);\nMenubarSub = __decorate([core_1.Component({\n  selector: 'p-menubarSub',\n  template: \"\\n        <ul [ngClass]=\\\"{'ui-menubar-root-list ui-helper-clearfix':root, 'ui-widget-content ui-corner-all ui-helper-clearfix ui-menu-child ui-shadow':!root}\\\" class=\\\"ui-menu-list\\\"\\n            (click)=\\\"listClick($event)\\\">\\n            <ng-template ngFor let-child [ngForOf]=\\\"(root ? item : item.items)\\\">\\n                <li *ngIf=\\\"child.separator\\\" class=\\\"ui-menu-separator ui-widget-content\\\" [ngClass]=\\\"{'ui-helper-hidden': child.visible === false}\\\">\\n                <li *ngIf=\\\"!child.separator\\\" #listItem [ngClass]=\\\"{'ui-menuitem ui-widget ui-corner-all':true,\\n                        'ui-menu-parent':child.items,'ui-menuitem-active':listItem==activeItem,'ui-helper-hidden': child.visible === false}\\\"\\n                        (mouseenter)=\\\"onItemMouseEnter($event,listItem,child)\\\" (mouseleave)=\\\"onItemMouseLeave($event)\\\">\\n                    <a *ngIf=\\\"!child.routerLink\\\" [href]=\\\"child.url||'#'\\\" [attr.target]=\\\"child.target\\\" [attr.title]=\\\"child.title\\\" (click)=\\\"itemClick($event, child)\\\"\\n                         [ngClass]=\\\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\\\" [ngStyle]=\\\"child.style\\\" [class]=\\\"child.styleClass\\\">\\n                        <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"child.icon\\\" [ngClass]=\\\"child.icon\\\"></span>\\n                        <span class=\\\"ui-menuitem-text\\\">{{child.label}}</span>\\n                        <span class=\\\"ui-submenu-icon fa fa-fw\\\" *ngIf=\\\"child.items\\\" [ngClass]=\\\"{'fa-caret-down':root,'fa-caret-right':!root}\\\"></span>\\n                    </a>\\n                    <a *ngIf=\\\"child.routerLink\\\" [routerLink]=\\\"child.routerLink\\\" [queryParams]=\\\"child.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" [routerLinkActiveOptions]=\\\"child.routerLinkActiveOptions||{exact:false}\\\" \\n                        [attr.target]=\\\"child.target\\\" [attr.title]=\\\"child.title\\\"\\n                        (click)=\\\"itemClick($event, child)\\\" [ngClass]=\\\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\\\" [ngStyle]=\\\"child.style\\\" [class]=\\\"child.styleClass\\\">\\n                        <span class=\\\"ui-menuitem-icon fa fa-fw\\\" *ngIf=\\\"child.icon\\\" [ngClass]=\\\"child.icon\\\"></span>\\n                        <span class=\\\"ui-menuitem-text\\\">{{child.label}}</span>\\n                        <span class=\\\"ui-submenu-icon fa fa-fw\\\" *ngIf=\\\"child.items\\\" [ngClass]=\\\"{'fa-caret-down':root,'fa-caret-right':!root}\\\"></span>\\n                    </a>\\n                    <p-menubarSub class=\\\"ui-submenu\\\" [item]=\\\"child\\\" *ngIf=\\\"child.items\\\"></p-menubarSub>\\n                </li>\\n            </ng-template>\\n            <li class=\\\"ui-menuitem ui-menuitem-custom ui-widget ui-corner-all\\\">\\n                <ng-content></ng-content>\\n            </li>\\n        </ul>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [domhandler_1.DomHandler])], MenubarSub);\nexports.MenubarSub = MenubarSub;\nvar Menubar = function () {\n  function Menubar(el, domHandler, renderer) {\n    this.el = el;\n    this.domHandler = domHandler;\n    this.renderer = renderer;\n  }\n  return Menubar;\n}();\n__decorate([core_1.Input(), __metadata(\"design:type\", Array)], Menubar.prototype, \"model\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", Object)], Menubar.prototype, \"style\", void 0);\n__decorate([core_1.Input(), __metadata(\"design:type\", String)], Menubar.prototype, \"styleClass\", void 0);\nMenubar = __decorate([core_1.Component({\n  selector: 'p-menubar',\n  template: \"\\n        <div [ngClass]=\\\"{'ui-menubar ui-menu ui-widget ui-widget-content ui-corner-all ui-helper-clearfix':true}\\\" \\n            [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\">\\n            <p-menubarSub [item]=\\\"model\\\" root=\\\"root\\\">\\n                <ng-content></ng-content>\\n            </p-menubarSub>\\n        </div>\\n    \",\n  providers: [domhandler_1.DomHandler]\n}), __metadata(\"design:paramtypes\", [core_1.ElementRef, domhandler_1.DomHandler, core_1.Renderer2])], Menubar);\nexports.Menubar = Menubar;\nvar MenubarModule = function () {\n  function MenubarModule() {}\n  return MenubarModule;\n}();\nMenubarModule = __decorate([core_1.NgModule({\n  imports: [common_1.CommonModule, router_1.RouterModule],\n  exports: [Menubar, router_1.RouterModule],\n  declarations: [Menubar, MenubarSub]\n})], MenubarModule);\nexports.MenubarModule = MenubarModule;\n//# sourceMappingURL=menubar.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}