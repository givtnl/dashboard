{"ast":null,"code":"import { __decorate } from \"tslib\";\n/**\n * @param params.email\n * @param params.code\n * @param params.e\n * @param params.app\n */\nimport { Component } from '@angular/core';\nlet ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(userService, router, translate, route) {\n    this.userService = userService;\n    this.router = router;\n    this.route = route;\n    /*  booleans for flow  */\n    this.email_given = false;\n    this.saved = false;\n    this.no_email_given = false;\n    this.wrong = false;\n    this.email_sent = false;\n    this.coming_from_app = false;\n    /*  ------  */\n    this.disabled = false;\n    this.shouldDisableSaveButton = true;\n    this.userService = userService;\n    this.passwordHidden = true;\n    this.eyeColor = \"#BCB9C9\";\n    this.translate = translate;\n  }\n  ngOnInit() {\n    this.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    this.resetNav();\n    this.route.queryParams.subscribe(params => {\n      if (params.email) {\n        this.email_given = true;\n        this.email = params.email;\n      } else {\n        this.no_email_given = true;\n      }\n      if (params.code) {\n        this.token = params.code;\n      }\n      if (params.e) {\n        this.userName = params.e;\n      }\n      if (params.app) {\n        this.coming_from_app = params.app === \"true\";\n      }\n      this.queryParams = params;\n    });\n  }\n  requestPass() {\n    this.disabled = true;\n    if (!this.userName) {\n      this.disabled = false;\n      return;\n    }\n    this.userService.requestNewPass(this.userName).then(resp => {\n      this.disabled = false;\n      if (resp.ok == true) {\n        this.resetNav();\n        this.email_sent = true;\n        this.translate.get('PW_RequestedPW').subscribe(res => {\n          this.error_message = res;\n        });\n      }\n    }).catch(resp => {\n      this.resetNav();\n      this.disabled = false;\n      this.wrong = true;\n      this.translate.get('PW_UnknownEmail').subscribe(res => {\n        this.error_message = res;\n      });\n    });\n  }\n  changePw(value) {\n    var regEx = new RegExp(\".*[0-9]+.*[A-Z]+.*|.*[A-Z]+.*[0-9]+.*\");\n    if (regEx.test(value) && value.length > 6 && value.length <= 35) {\n      this.shouldDisableSaveButton = false;\n    } else {\n      this.shouldDisableSaveButton = true;\n    }\n  }\n  save() {\n    this.disabled = true;\n    this.error_message = null;\n    this.userService.saveNewPass(this.email, this.token, this.password).then(res => {\n      this.disabled = false;\n      this.resetNav();\n      if (res.ok) {\n        this.saved = true;\n      } else {\n        this.wrong = true;\n      }\n    }).catch(err => {\n      this.disabled = false;\n      this.resetNav();\n      this.wrong = true;\n      if (err._body.indexOf('Invalid') != -1) {\n        this.translate.get('InvalidToken').subscribe(res => {\n          this.error_message = res;\n        });\n      } else {\n        this.translate.get('PW_PWPolicy').subscribe(res => {\n          this.error_message = res;\n        });\n      }\n      console.log(err);\n    });\n  }\n  retry() {\n    this.wrong = false;\n    this.route.queryParams.subscribe(params => {\n      this.resetNav();\n      if (params.email) {\n        this.email_given = true;\n        this.email = params.email;\n      } else {\n        this.no_email_given = true;\n      }\n      if (params.code) {\n        this.token = params.code;\n      }\n      this.queryParams = params;\n    });\n  }\n  showPass() {\n    if (this.passwordHidden) {\n      this.passwordHidden = false;\n      document.getElementById(\"pass\").type = \"text\";\n      this.eyeColor = \"#41C98E\";\n    } else {\n      this.passwordHidden = true;\n      document.getElementById(\"pass\").type = \"password\";\n      this.eyeColor = \"#BCB9C9\";\n    }\n  }\n  resetNav() {\n    this.saved = false;\n    this.email_given = false;\n    this.no_email_given = false;\n    this.wrong = false;\n    this.email_sent = false;\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: 'forgotpassword',\n  templateUrl: '../html/forgotpassword.component.html',\n  styleUrls: ['../css/forgotpassword.component.css']\n})], ForgotPasswordComponent);\nexport { ForgotPasswordComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}